{"version":3,"file":"core.js","sources":["node_modules/sticky-module/esm/index.js","node_modules/basic-devtools/esm/index.js","node_modules/@ungap/structured-clone/esm/deserialize.js","node_modules/@ungap/structured-clone/esm/types.js","node_modules/@ungap/structured-clone/esm/serialize.js","node_modules/@ungap/structured-clone/esm/json.js","node_modules/coincident/esm/channel.js","node_modules/coincident/esm/shared/types.js","node_modules/coincident/esm/fallback.js","node_modules/coincident/esm/index.js","node_modules/gc-hook/esm/index.js","node_modules/coincident/esm/shared/utils.js","node_modules/coincident/esm/shared/traps.js","node_modules/coincident/esm/shared/main.js","node_modules/coincident/esm/window/main.js","node_modules/coincident/esm/window/thread.js","node_modules/coincident/esm/shared/thread.js","node_modules/coincident/esm/shared/worker.js","node_modules/coincident/esm/window.js","node_modules/@ungap/with-resolvers/index.js","esm/fetch-utils.js","node_modules/codedent/esm/index.js","node_modules/plain-tag/esm/index.js","node_modules/html-escaper/esm/index.js","esm/utils.js","esm/interpreter/_utils.js","esm/interpreter/_python.js","esm/interpreter/micropython.js","esm/interpreter/pyodide.js","esm/interpreter/ruby-wasm-wasi.js","esm/interpreter/wasmoon.js","esm/interpreters.js","esm/toml.js","esm/loader.js","esm/hooks.js","esm/worker/hook.js","esm/worker/class.js","esm/worker/xworker.js","esm/errors.js","esm/worker/url.js","esm/script-handler.js","esm/listeners.js","esm/xworker.js","esm/custom.js","esm/index.js"],"sourcesContent":["/**\n * Allow leaking a module globally to help avoid conflicting exports\n * if the module might have been re-bundled in other projects.\n * @param {string} name the module name to save or retrieve\n * @param {object} value the module as value to save if not known\n * @param {globalThis} [global=globalThis] the reference where modules are saved where `globalThis` is the default\n * @returns {[object, boolean]} the passed `value` or the previous one as first entry, a boolean indicating if it was known or not\n */\nconst stickyModule = (name, value, global = globalThis) => {\n  const symbol = Symbol.for(name);\n  const known = symbol in global;\n  return [\n    known ?\n      global[symbol] :\n      Object.defineProperty(global, symbol, { value })[symbol],\n    known\n  ];\n};\n\nexport default stickyModule;\n","/**\n * Given a CSS selector, returns the first matching node, if any.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element?} the found element, if any\n */\nconst $ = (css, root = document) => root.querySelector(css);\n\n/**\n * Given a CSS selector, returns a list of all matching nodes.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element[]} a list of found nodes\n */\nconst $$ = (css, root = document) => [...root.querySelectorAll(css)];\n\n/**\n * Given a XPath selector, returns a list of all matching nodes.\n * @param {string} path the XPath selector to evaluate\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Node[]} a list of found nodes (elements, attributes, text, comments)\n */\nconst $x = (path, root = document) => {\n  const expression = (new XPathEvaluator).createExpression(path);\n  const xpath = expression.evaluate(root, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE);\n  const result = [];\n  for (let i = 0, {snapshotLength} = xpath; i < snapshotLength; i++)\n    result.push(xpath.snapshotItem(i));\n  return result;\n};\n\nexport {$, $$, $x};\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","/*! (c) Andrea Giammarchi - ISC */\n\nimport {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\nconst {parse: $parse, stringify: $stringify} = JSON;\nconst options = {json: true, lossy: true};\n\n/**\n * Revive a previously stringified structured clone.\n * @param {string} str previously stringified data as string.\n * @returns {any} whatever was previously stringified as clone.\n */\nexport const parse = str => deserialize($parse(str));\n\n/**\n * Represent a structured clone value as string.\n * @param {any} any some clone-able value to stringify.\n * @returns {string} the value stringified.\n */\nexport const stringify = any => $stringify(serialize(any, options));\n","// ⚠️ AUTOMATICALLY GENERATED - DO NOT CHANGE\nexport const CHANNEL = '49775373-4961-44cd-9a4b-651a0c9cca5a';\n\nexport const MAIN = 'M' + CHANNEL;\nexport const THREAD = 'T' + CHANNEL;\n","export const OBJECT    = 'object';\nexport const FUNCTION  = 'function';\nexport const BOOLEAN   = 'boolean';\nexport const NUMBER    = 'number';\nexport const STRING    = 'string';\nexport const UNDEFINED = 'undefined';\nexport const BIGINT    = 'bigint';\nexport const SYMBOL    = 'symbol';\nexport const NULL      = 'null';\n","// encodeURIComponent('onmessage=({data:b})=>(Atomics.wait(b,0),postMessage(0))')\n\nexport default buffer => ({\n  value: new Promise(onmessage => {\n    let w = new Worker('data:application/javascript,onmessage%3D(%7Bdata%3Ab%7D)%3D%3E(Atomics.wait(b%2C0)%2CpostMessage(0))');\n    w.onmessage = onmessage;\n    w.postMessage(buffer);\n  })\n});\n","/*! (c) Andrea Giammarchi - ISC */\n\nimport {CHANNEL} from './channel.js';\nimport {FUNCTION} from './shared/types.js';\nimport waitAsyncFallback from './fallback.js';\n\n// just minifier friendly for Blob Workers' cases\nconst {Int32Array, Map, SharedArrayBuffer, Uint16Array} = globalThis;\n\n// common constants / utilities for repeated operations\nconst {BYTES_PER_ELEMENT: I32_BYTES} = Int32Array;\nconst {BYTES_PER_ELEMENT: UI16_BYTES} = Uint16Array;\n\n// @see https://github.com/WebReflection/coincident/issues/29\n// @see http://webreflection.blogspot.com/2011/07/about-javascript-apply-arguments-limit.html\nconst SAFE_ARITY_LENGTH = 2048;\n\nconst {isArray} = Array;\nconst {notify, wait, waitAsync} = Atomics;\nconst {fromCharCode} = String;\n\nconst waitInterrupt = (sb, delay, handler) => {\n  while (wait(sb, 0, 0, delay) === 'timed-out')\n    handler();\n};\n\n// retain buffers to transfer\nconst buffers = new WeakSet;\n\n// retain either main threads or workers global context\nconst context = new WeakMap;\n\nconst syncResult = {value: {then: fn => fn()}};\n\n// used to generate a unique `id` per each worker `postMessage` \"transaction\"\nlet uid = 0;\n\n/**\n * @typedef {Object} Interrupt used to sanity-check interrupts while waiting synchronously.\n * @prop {function} [handler] a callback invoked every `delay` milliseconds.\n * @prop {number} [delay=42] define `handler` invokes in terms of milliseconds.\n */\n\n/**\n * Create once a `Proxy` able to orchestrate synchronous `postMessage` out of the box.\n * @param {globalThis | Worker} self the context in which code should run\n * @param {{parse: (serialized: string) => any, stringify: (serializable: any) => string, transform?: (value:any) => any, interrupt?: () => void | Interrupt}} [JSON] an optional `JSON` like interface to `parse` or `stringify` content with extra `transform` ability.\n * @returns {ProxyHandler<globalThis> | ProxyHandler<Worker>}\n */\nconst coincident = (self, {parse = JSON.parse, stringify = JSON.stringify, transform, interrupt} = JSON) => {\n  // create a Proxy once for the given context (globalThis or Worker instance)\n  if (!context.has(self)) {\n    // ensure the CHANNEL and data are posted correctly\n    const post = (transfer, ...args) => self.postMessage({[CHANNEL]: args}, {transfer});\n\n    const handler = typeof interrupt === FUNCTION ? interrupt : interrupt?.handler;\n    const delay = interrupt?.delay || 42;\n\n    // automatically uses sync wait (worker -> main)\n    // or fallback to async wait (main -> worker)\n    const waitFor = (isAsync, sb) => isAsync ?\n      (waitAsync || waitAsyncFallback)(sb, 0) :\n      ((handler ? waitInterrupt(sb, delay, handler) : wait(sb, 0)), syncResult);\n\n    // prevent Harakiri https://github.com/WebReflection/coincident/issues/18\n    let seppuku = false;\n\n    context.set(self, new Proxy(new Map, {\n      // there is very little point in checking prop in proxy for this very specific case\n      // and I don't want to orchestrate a whole roundtrip neither, as stuff would fail\n      // regardless if from Worker we access non existent Main callback, and vice-versa.\n      // This is here mostly to guarantee that if such check is performed, at least the\n      // get trap goes through and then it's up to developers guarantee they are accessing\n      // stuff that actually exists elsewhere.\n      has: (_, action) => typeof action === 'string' && !action.startsWith('_'),\n\n      // worker related: get any utility that should be available on the main thread\n      get: (_, action) => action === 'then' ? null : ((...args) => {\n        // transaction id\n        const id = uid++;\n\n        // first contact: just ask for how big the buffer should be\n        // the value would be stored at index [1] while [0] is just control\n        let sb = new Int32Array(new SharedArrayBuffer(I32_BYTES * 2));\n\n        // if a transfer list has been passed, drop it from args\n        let transfer = [];\n        if (buffers.has(args.at(-1) || transfer))\n          buffers.delete(transfer = args.pop());\n\n        // ask for invoke with arguments and wait for it\n        post(transfer, id, sb, action, transform ? args.map(transform) : args);\n\n        // helps deciding how to wait for results\n        const isAsync = self !== globalThis;\n\n        // warn users about possible deadlock still allowing them\n        // to explicitly `proxy.invoke().then(...)` without blocking\n        let deadlock = 0;\n        if (seppuku && isAsync)\n          deadlock = setTimeout(console.warn, 1000, `💀🔒 - Possible deadlock if proxy.${action}(...args) is awaited`);\n\n        return waitFor(isAsync, sb).value.then(() => {\n          clearTimeout(deadlock);\n\n          // commit transaction using the returned / needed buffer length\n          const length = sb[1];\n\n          // filter undefined results\n          if (!length) return;\n\n          // calculate the needed ui16 bytes length to store the result string\n          const bytes = UI16_BYTES * length;\n\n          // round up to the next amount of bytes divided by 4 to allow i32 operations\n          sb = new Int32Array(new SharedArrayBuffer(bytes + (bytes % I32_BYTES)));\n\n          // ask for results and wait for it\n          post([], id, sb);\n          return waitFor(isAsync, sb).value.then(() => {\n            // transform the shared buffer into a string and return it parsed\n            const uint16 = new Uint16Array(sb.buffer).slice(0, length);\n            const result = [];\n            for (let i = 0; i < length; i += SAFE_ARITY_LENGTH)\n              result.push(fromCharCode(...uint16.slice(i, i + SAFE_ARITY_LENGTH)));\n            return parse(result.join(''));\n          });\n        });\n      }),\n\n      // main thread related: react to any utility a worker is asking for\n      set(actions, action, callback) {\n        const type = typeof callback;\n        if (type !== FUNCTION)\n          throw new Error(`Unable to assign ${action} as ${type}`);\n        // lazy event listener and logic handling, triggered once by setters actions\n        if (!actions.size) {\n          // maps results by `id` as they are asked for\n          const results = new Map;\n          // add the event listener once (first defined setter, all others work the same)\n          self.addEventListener('message', async (event) => {\n            // grub the very same library CHANNEL; ignore otherwise\n            const details = event.data?.[CHANNEL];\n            if (isArray(details)) {\n              // if early enough, avoid leaking data to other listeners\n              event.stopImmediatePropagation();\n              const [id, sb, ...rest] = details;\n              let error;\n              // action available: it must be defined/known on the main thread\n              if (rest.length) {\n                const [action, args] = rest;\n                if (actions.has(action)) {\n                  seppuku = true;\n                  try {\n                    // await for result either sync or async and serialize it\n                    const result = await actions.get(action)(...args);\n                    if (result !== void 0) {\n                      const serialized = stringify(transform ? transform(result) : result);\n                      // store the result for \"the very next\" event listener call\n                      results.set(id, serialized);\n                      // communicate the required SharedArrayBuffer length out of the\n                      // resulting serialized string\n                      sb[1] = serialized.length;\n                    }\n                  }\n                  catch (_) {\n                    error = _;\n                  }\n                  finally {\n                    seppuku = false;\n                  }\n                }\n                // unknown action should be notified as missing on the main thread\n                else {\n                  error = new Error(`Unsupported action: ${action}`);\n                }\n                // unlock the wait lock later on\n                sb[0] = 1;\n              }\n              // no action means: get results out of the well known `id`\n              // wait lock automatically unlocked here as no `0` value would\n              // possibly ever land at index `0`\n              else {\n                const result = results.get(id);\n                results.delete(id);\n                // populate the SharedArrayBuffer with utf-16 chars code\n                for (let ui16a = new Uint16Array(sb.buffer), i = 0; i < result.length; i++)\n                  ui16a[i] = result.charCodeAt(i);\n              }\n              // release te worker waiting either the length or the result\n              notify(sb, 0);\n              if (error) throw error;\n            }\n          });\n        }\n        // store this action callback allowing the setter in the process\n        return !!actions.set(action, callback);\n      }\n    }));\n  }\n  return context.get(self);\n};\n\ncoincident.transfer = (...args) => (buffers.add(args), args);\n\nexport default coincident;\n","// (c) Andrea Giammarchi - ISC\n\nconst registry = new FinalizationRegistry(\n  ([onGarbageCollected, held, debug]) => {\n    if (debug) console.debug(`Held value ${String(held)} not relevant anymore`);\n    onGarbageCollected(held);\n  }\n);\n\nconst handler = Object.create(null);\n\n/**\n * Register a generic reference to hold in memory, returning either an explicit replacement for it, if specified as optional extra option, or just a `ProxyHandler<hold>` to allow the GC to collect such proxy later on.\n * @template H,R\n * @param {H} hold the reference to retain in memory until the returned value is not collected.\n * @param {(held:H) => void} onGarbageCollected the callback to invoke once the returned value is collected.\n * @param {{debug?: true, return?:R, token?:H | false}} [options] optionally override the returned value or the token to unregister. If `debug` is true it will log once FinalizationRegistry kicked in.\n * @returns {R | ProxyHandler<H>} a transparent proxy for the held reference or whatever override was passed as `return` field of the options.\n */\nexport const create = (\n  hold,\n  onGarbageCollected,\n  { debug, return: R, token = hold } = handler\n) => {\n  // if no reference to return is defined,\n  // create a proxy for the held one and register that instead.\n  const target = R || new Proxy(hold, handler);\n  const args = [target, [onGarbageCollected, hold, !!debug]];\n  if (token !== false) args.push(token);\n  // register the target reference in a way that\n  // the `onGarbageCollected(held)` callback will eventually notify.\n  registry.register(...args);\n  return target;\n};\n\n/**\n * If previously registered as either `token` or `hold` value, allow explicit removal of the entry in the registry.\n * @param {unknown} token the token used during registration. If no `token` was passed, this can be the same `hold` reference.\n * @returns {boolean} `true` if successfully unregistered.\n */\nexport const drop = token => registry.unregister(token);\n\n// TODO: this is probably overkill / unnecessary\n// const registered = new WeakMap;\n// if (registered.has(keep))\n//   unregister(registered.get(keep));\n// registered.set(keep, token || keep);\n","\nimport {\n  OBJECT,\n  FUNCTION,\n  BOOLEAN,\n  NUMBER,\n  STRING,\n  UNDEFINED,\n  BIGINT,\n  SYMBOL,\n  NULL\n} from './types.js';\n\nconst {\n  defineProperty,\n  getOwnPropertyDescriptor,\n  getPrototypeOf,\n  isExtensible,\n  ownKeys,\n  preventExtensions,\n  set,\n  setPrototypeOf\n} = Reflect;\n\nconst {assign, create} = Object;\n\nexport const TypedArray = getPrototypeOf(Int8Array);\n\nexport const isArray = 'isArray';\n\nexport {\n  assign,\n  create,\n  defineProperty,\n  getOwnPropertyDescriptor,\n  getPrototypeOf,\n  isExtensible,\n  ownKeys,\n  preventExtensions,\n  set,\n  setPrototypeOf\n};\n\nexport const augment = (descriptor, how) => {\n  const {get, set, value} = descriptor;\n  if (get) descriptor.get = how(get);\n  if (set) descriptor.set = how(set);\n  if (value) descriptor.value = how(value);\n  return descriptor;\n};\n\nexport const entry = (type, value) => [type, value];\n\nexport const asEntry = transform => value => {\n  const type = typeof value;\n  switch (type) {\n    case OBJECT:\n    if (value == null)\n      return entry(NULL, value);\n    if (value === globalThis)\n      return entry(OBJECT, null);\n    case FUNCTION:\n      return transform(type, value);\n    case BOOLEAN:\n    case NUMBER:\n    case STRING:\n    case UNDEFINED:\n    case BIGINT:\n      return entry(type, value);\n    case SYMBOL: {\n      if (symbols.has(value))\n        return entry(type, symbols.get(value));\n    }\n  }\n  throw new Error(`Unable to handle this ${type} type`);\n};\n\nconst symbols = new Map(\n  ownKeys(Symbol)\n    .filter(s => typeof Symbol[s] === SYMBOL)\n    .map(s => [Symbol[s], s])\n);\n\nexport const symbol = value => {\n  for (const [symbol, name] of symbols) {\n    if (name === value)\n      return symbol;\n  }\n};\n\nexport const transform = o => o;\n\nexport function Bound() {\n  return this;\n}\n","export const APPLY                        = 'apply';\nexport const CONSTRUCT                    = 'construct';\nexport const DEFINE_PROPERTY              = 'defineProperty';\nexport const DELETE_PROPERTY              = 'deleteProperty';\nexport const GET                          = 'get';\nexport const GET_OWN_PROPERTY_DESCRIPTOR  = 'getOwnPropertyDescriptor';\nexport const GET_PROTOTYPE_OF             = 'getPrototypeOf';\nexport const HAS                          = 'has';\nexport const IS_EXTENSIBLE                = 'isExtensible';\nexport const OWN_KEYS                     = 'ownKeys';\nexport const PREVENT_EXTENSION            = 'preventExtensions';\nexport const SET                          = 'set';\nexport const SET_PROTOTYPE_OF             = 'setPrototypeOf';\nexport const DELETE                       = 'delete';\n","import { create as createGCHook } from 'gc-hook';\n\nimport {\n  TypedArray,\n  defineProperty,\n  getOwnPropertyDescriptor,\n  getPrototypeOf,\n  isExtensible,\n  ownKeys,\n  preventExtensions,\n  set,\n  setPrototypeOf,\n\n  assign,\n  create,\n  augment,\n  entry,\n  asEntry,\n  symbol,\n  transform\n} from './utils.js';\n\nimport {\n  OBJECT,\n  FUNCTION,\n  NUMBER,\n  STRING,\n  SYMBOL,\n  UNDEFINED\n} from './types.js';\n\nimport {\n  APPLY,\n  CONSTRUCT,\n  DEFINE_PROPERTY,\n  DELETE_PROPERTY,\n  GET,\n  GET_OWN_PROPERTY_DESCRIPTOR,\n  GET_PROTOTYPE_OF,\n  HAS,\n  IS_EXTENSIBLE,\n  OWN_KEYS,\n  PREVENT_EXTENSION,\n  SET,\n  SET_PROTOTYPE_OF,\n  DELETE\n} from './traps.js';\n\nexport default (name, patch) => {\n  const eventsHandler = patch && new WeakMap;\n\n  // patch once main UI tread\n  if (patch) {\n    const {addEventListener} = EventTarget.prototype;\n    // this should never be on the way as it's extremely light and fast\n    // but it's necessary to allow \"preventDefault\" or other event invokes at distance\n    defineProperty(EventTarget.prototype, 'addEventListener', {\n      value(type, listener, ...options) {\n        if (options.at(0)?.invoke) {\n          if (!eventsHandler.has(this))\n            eventsHandler.set(this, new Map);\n          eventsHandler.get(this).set(type, [].concat(options[0].invoke));\n          delete options[0].invoke;\n        }\n        return addEventListener.call(this, type, listener, ...options);\n      }\n    });\n  }\n\n  const handleEvent = patch && (event => {\n    const {currentTarget, target, type} = event;\n    for (const method of eventsHandler.get(currentTarget || target)?.get(type) || [])\n      event[method]();\n  });\n\n  return function (thread, MAIN, THREAD, ...args) {\n    let id = 0, $ = this?.transform || transform;\n    const ids = new Map;\n    const values = new Map;\n\n    const {[THREAD]: __thread__} = thread;\n\n    const global = args.length ? assign(create(globalThis), ...args) : globalThis;\n\n    const result = asEntry((type, value) => {\n      if (!ids.has(value)) {\n        let sid;\n        // a bit apocalyptic scenario but if this main runs forever\n        // and the id does a whole int32 roundtrip we might have still\n        // some reference danglign around\n        while (values.has(sid = id++));\n        ids.set(value, sid);\n        values.set(sid, type === OBJECT ? $(value) : value);\n      }\n      return entry(type, ids.get(value));\n    });\n\n    const onGarbageCollected = value => {\n      __thread__(DELETE, entry(STRING, value));\n    };\n\n    const target = ([type, value]) => {\n      switch (type) {\n        case OBJECT:\n          if (value == null)\n            return global;\n          if (typeof value === NUMBER)\n            return values.get(value);\n          if (!(value instanceof TypedArray)) {\n            for (const key in value)\n              value[key] = target(value[key]);\n          }\n          return value;\n        case FUNCTION:\n          if (typeof value === STRING) {\n            if (!values.has(value)) {\n              const cb = function (...args) {\n                if (patch && args.at(0) instanceof Event) handleEvent(...args);\n                return __thread__(\n                  APPLY,\n                  entry(FUNCTION, value),\n                  result(this),\n                  args.map(result)\n                );\n              };\n              values.set(value, new WeakRef(cb));\n              return createGCHook(value, onGarbageCollected, {\n                return: cb,\n                token: false,\n              });\n            }\n            return values.get(value).deref();\n          }\n          return values.get(value);\n        case SYMBOL:\n          return symbol(value);\n      }\n      return value;\n    };\n\n    const trapsHandler = {\n      [APPLY]: (target, thisArg, args) => result(target.apply(thisArg, args)),\n      [CONSTRUCT]: (target, args) => result(new target(...args)),\n      [DEFINE_PROPERTY]: (target, name, descriptor) => result(defineProperty(target, name, descriptor)),\n      [DELETE_PROPERTY]: (target, name) => result(delete target[name]),\n      [GET_PROTOTYPE_OF]: target => result(getPrototypeOf(target)),\n      [GET]: (target, name) => result(target[name]),\n      [GET_OWN_PROPERTY_DESCRIPTOR]: (target, name) => {\n        const descriptor = getOwnPropertyDescriptor(target, name);\n        return descriptor ? entry(OBJECT, augment(descriptor, result)) : entry(UNDEFINED, descriptor);\n      },\n      [HAS]: (target, name) => result(name in target),\n      [IS_EXTENSIBLE]: target => result(isExtensible(target)),\n      [OWN_KEYS]: target => entry(OBJECT, ownKeys(target).map(result)),\n      [PREVENT_EXTENSION]: target => result(preventExtensions(target)),\n      [SET]: (target, name, value) => result(set(target, name, value)),\n      [SET_PROTOTYPE_OF]: (target, proto) => result(setPrototypeOf(target, proto)),\n      [DELETE](id) {\n        ids.delete(values.get(id));\n        values.delete(id);\n      }\n    };\n\n    thread[MAIN] = (trap, entry, ...args) => {\n      switch (trap) {\n        case APPLY:\n          args[0] = target(args[0]);\n          args[1] = args[1].map(target);\n          break;\n        case CONSTRUCT:\n          args[0] = args[0].map(target);\n          break;\n        case DEFINE_PROPERTY: {\n          const [name, descriptor] = args;\n          args[0] = target(name);\n          const {get, set, value} = descriptor;\n          if (get) descriptor.get = target(get);\n          if (set) descriptor.set = target(set);\n          if (value) descriptor.value = target(value);\n          break;\n        }\n        default:\n          args = args.map(target);\n          break;\n      }\n      return trapsHandler[trap](target(entry), ...args);\n    };\n\n    return {\n      proxy: thread,\n      [name.toLowerCase()]: global,\n      [`is${name}Proxy`]: () => false\n    };\n  };\n};\n","import main from '../shared/main.js';\n\nexport default main('Window', true);\n","import thread from '../shared/thread.js';\n\nexport default thread('Window');\n","import { create as createGCHook } from 'gc-hook';\n\nimport {\n  Bound,\n  TypedArray,\n  augment,\n  defineProperty,\n  entry,\n  asEntry,\n  symbol,\n  transform,\n  isArray\n} from './utils.js';\n\nimport {\n  OBJECT,\n  FUNCTION,\n  NUMBER,\n  STRING,\n  SYMBOL\n} from './types.js';\n\nimport {\n  APPLY,\n  CONSTRUCT,\n  DEFINE_PROPERTY,\n  DELETE_PROPERTY,\n  GET,\n  GET_OWN_PROPERTY_DESCRIPTOR,\n  GET_PROTOTYPE_OF,\n  HAS,\n  IS_EXTENSIBLE,\n  OWN_KEYS,\n  PREVENT_EXTENSION,\n  SET,\n  SET_PROTOTYPE_OF,\n  DELETE\n} from './traps.js';\n\nexport default name => {\n  let id = 0;\n  const ids = new Map;\n  const values = new Map;\n\n  const __proxied__ = Symbol();\n\n  const bound = target => typeof target === FUNCTION ? target() : target;\n\n  const isProxy = value => typeof value === OBJECT && !!value && __proxied__ in value;\n\n  const localArray = Array[isArray];\n\n  return function (main, MAIN, THREAD) {\n    const $ = this?.transform || transform;\n    const { [MAIN]: __main__ } = main;\n\n    const proxies = new Map;\n\n    const onGarbageCollected = value => {\n      proxies.delete(value);\n      __main__(DELETE, argument(value));\n    };\n\n    const argument = asEntry(\n      (type, value) => {\n        if (__proxied__ in value)\n          return bound(value[__proxied__]);\n        if (type === FUNCTION) {\n          value = $(value);\n          if (!values.has(value)) {\n            let sid;\n            // a bit apocalyptic scenario but if this thread runs forever\n            // and the id does a whole int32 roundtrip we might have still\n            // some reference dangling around\n            while (values.has(sid = String(id++)));\n            ids.set(value, sid);\n            values.set(sid, value);\n          }\n          return entry(type, ids.get(value));\n        }\n        if (!(value instanceof TypedArray)) {\n          if (type === OBJECT)\n            value = $(value);\n          for(const key in value)\n            value[key] = argument(value[key]);\n        }\n        return entry(type, value);\n      }\n    );\n\n    const register = (entry) => {\n      const [type, value] = entry;\n      if (!proxies.has(value)) {\n        const target = type === FUNCTION ? Bound.bind(entry) : entry;\n        const proxy = new Proxy(target, proxyHandler);\n        proxies.set(value, new WeakRef(proxy));\n        return createGCHook(value, onGarbageCollected, {\n          return: proxy,\n          token: false,\n        });\n      }\n      return proxies.get(value).deref();\n    };\n\n    const fromEntry = entry => {\n      const [type, value] = entry;\n      switch (type) {\n        case OBJECT:\n          return value === null ? globalThis : (\n            typeof value === NUMBER ? register(entry) : value\n          );\n        case FUNCTION:\n          return typeof value === STRING ? values.get(value) : register(entry);\n        case SYMBOL:\n          return symbol(value);\n      }\n      return value;\n    };\n\n    const result = (TRAP, target, ...args) => fromEntry(__main__(TRAP, bound(target), ...args));\n\n    const proxyHandler = {\n      [APPLY]: (target, thisArg, args) => result(APPLY, target, argument(thisArg), args.map(argument)),\n      [CONSTRUCT]: (target, args) => result(CONSTRUCT, target, args.map(argument)),\n      [DEFINE_PROPERTY]: (target, name, descriptor) => {\n        const { get, set, value } = descriptor;\n        if (typeof get === FUNCTION) descriptor.get = argument(get);\n        if (typeof set === FUNCTION) descriptor.set = argument(set);\n        if (typeof value === FUNCTION) descriptor.value = argument(value);\n        return result(DEFINE_PROPERTY, target, argument(name), descriptor);\n      },\n      [DELETE_PROPERTY]: (target, name) => result(DELETE_PROPERTY, target, argument(name)),\n      [GET_PROTOTYPE_OF]: target => result(GET_PROTOTYPE_OF, target),\n      [GET]: (target, name) => name === __proxied__ ? target : result(GET, target, argument(name)),\n      [GET_OWN_PROPERTY_DESCRIPTOR]: (target, name) => {\n        const descriptor = result(GET_OWN_PROPERTY_DESCRIPTOR, target, argument(name));\n        return descriptor && augment(descriptor, fromEntry);\n      },\n      [HAS]: (target, name) => name === __proxied__ || result(HAS, target, argument(name)),\n      [IS_EXTENSIBLE]: target => result(IS_EXTENSIBLE, target),\n      [OWN_KEYS]: target => result(OWN_KEYS, target).map(fromEntry),\n      [PREVENT_EXTENSION]: target => result(PREVENT_EXTENSION, target),\n      [SET]: (target, name, value) => result(SET, target, argument(name), argument(value)),\n      [SET_PROTOTYPE_OF]: (target, proto) => result(SET_PROTOTYPE_OF, target, argument(proto)),\n    };\n\n    main[THREAD] = (trap, entry, ctx, args) => {\n      switch (trap) {\n        case APPLY:\n          return fromEntry(entry).apply(fromEntry(ctx), args.map(fromEntry));\n        case DELETE: {\n          const id = fromEntry(entry);\n          ids.delete(values.get(id));\n          values.delete(id);\n        }\n      }\n    };\n\n    const global = new Proxy([OBJECT, null], proxyHandler);\n\n    // this is needed to avoid confusion when new Proxy([type, value])\n    // passes through `isArray` check, as that would return always true\n    // by specs and there's no Proxy trap to avoid it.\n    const remoteArray = global.Array[isArray];\n    defineProperty(Array, isArray, {\n      value: ref => isProxy(ref) ? remoteArray(ref) : localArray(ref)\n    });\n\n    return {\n      [name.toLowerCase()]: global,\n      [`is${name}Proxy`]: isProxy,\n      proxy: main\n    };\n  };\n};\n","import {FUNCTION} from \"./types.js\";\nexport default typeof Worker === FUNCTION ? Worker : class {};\n","import {MAIN, THREAD} from './channel.js';\nimport $coincident from './index.js';\nimport main from './window/main.js';\nimport thread from './window/thread.js';\nimport Worker from './shared/worker.js';\n\nconst proxies = new WeakMap;\n\n/**\n * @typedef {object} Coincident\n * @property {ProxyHandler<globalThis>} proxy\n * @property {ProxyHandler<Window>} window\n * @property {(value: any) => boolean} isWindowProxy\n */\n\n/**\n * Create once a `Proxy` able to orchestrate synchronous `postMessage` out of the box.\n * In workers, returns a `{proxy, window, isWindowProxy}` namespace to reach main globals synchronously.\n * @param {Worker | globalThis} self the context in which code should run\n * @returns {ProxyHandler<Worker> | Coincident}\n */\nconst coincident = (self, ...args) => {\n  const proxy = $coincident(self, ...args);\n  if (!proxies.has(proxy)) {\n    const util = self instanceof Worker ? main : thread;\n    proxies.set(proxy, util.call(args.at(0), proxy, MAIN, THREAD));\n  }\n  return proxies.get(proxy);\n}\n\ncoincident.transfer = $coincident.transfer;\n\nexport default coincident;\n","Promise.withResolvers || (Promise.withResolvers = function withResolvers() {\n  var a, b, c = new this(function (resolve, reject) {\n    a = resolve;\n    b = reject;\n  });\n  return {resolve: a, reject: b, promise: c};\n});\n","/** @param {Response} response */\nexport const getBuffer = (response) => response.arrayBuffer();\n\n/** @param {Response} response */\nexport const getJSON = (response) => response.json();\n\n/** @param {Response} response */\nexport const getText = (response) => response.text();\n","import content from 'plain-tag';\n\nconst dedent = {\n  object(...args) {\n    return this.string(content(...args));\n  },\n  string(content) {\n    for (const line of content.split(/[\\r\\n]+/)) {\n      // skip initial empty lines\n      if (line.trim().length) {\n        // trap indentation at the very first line of code\n        if (/^(\\s+)/.test(line))\n          content = content.replace(new RegExp('^' + RegExp.$1, 'gm'), '');\n        // no indentation? all good: get out of here!\n        break;\n      }\n    }\n    return content;\n  }\n};\n\n/**\n * Usable both as template literal tag or just as callback for strings, removes all spaces found\n * at the very first line of code encountered while sanitizing, keeping everything else around.\n * @param {string | TemplateStringsArray} tpl either code as string or as template, when used as tag\n * @param  {...any} values the template interpolations, when used as tag\n * @returns {string} code without undesired indentation\n */\nconst codedent = (tpl, ...values) => dedent[typeof tpl](tpl, ...values);\n\nexport default codedent;\n","export default function (t) {\n  for (var s = t[0], i = 1, l = arguments.length; i < l; i++)\n    s += arguments[i] + t[i];\n  return s;\n};\n","/**\n * Copyright (C) 2017-present by Andrea Giammarchi - @WebReflection\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst {replace} = '';\n\n// escape\nconst es = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/g;\nconst ca = /[&<>'\"]/g;\n\nconst esca = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  \"'\": '&#39;',\n  '\"': '&quot;'\n};\nconst pe = m => esca[m];\n\n/**\n * Safely escape HTML entities such as `&`, `<`, `>`, `\"`, and `'`.\n * @param {string} es the input to safely escape\n * @returns {string} the escaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const escape = es => replace.call(es, ca, pe);\n\n\n// unescape\nconst unes = {\n  '&amp;': '&',\n  '&#38;': '&',\n  '&lt;': '<',\n  '&#60;': '<',\n  '&gt;': '>',\n  '&#62;': '>',\n  '&apos;': \"'\",\n  '&#39;': \"'\",\n  '&quot;': '\"',\n  '&#34;': '\"'\n};\nconst cape = m => unes[m];\n\n/**\n * Safely unescape previously escaped entities such as `&`, `<`, `>`, `\"`,\n * and `'`.\n * @param {string} un a previously escaped string\n * @returns {string} the unescaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const unescape = un => replace.call(un, es, cape);\n","import dedent from 'codedent';\nimport { unescape } from 'html-escaper';\nimport { io } from './interpreter/_utils.js';\n\nconst { isArray } = Array;\n\nconst { assign, create, defineProperties, defineProperty, entries } = Object;\n\nconst { all, resolve } = new Proxy(Promise, {\n    get: ($, name) => $[name].bind($),\n});\n\nconst absoluteURL = (path, base = location.href) =>\n    new URL(path, base.replace(/^blob:/, '')).href;\n\n/* c8 ignore start */\nlet id = 0;\nconst nodeInfo = (node, type) => ({\n    id: node.id || (node.id = `${type}-w${id++}`),\n    tag: node.tagName\n});\n\n/**\n * Notify the main thread about element \"readiness\".\n * @param {HTMLScriptElement | HTMLElement} target the script or custom-type element\n * @param {string} type the custom/type as event prefix\n * @param {string} what the kind of event to dispatch, i.e. `ready` or `done`\n * @param {boolean} [worker = false] `true` if dispatched form a worker, `false` by default if in main\n * @param {globalThis.CustomEvent} [CustomEvent = globalThis.CustomEvent] the `CustomEvent` to use\n */\nconst dispatch = (target, type, what, worker = false, CE = CustomEvent) => {\n    target.dispatchEvent(\n        new CE(`${type}:${what}`, {\n            bubbles: true,\n            detail: { worker },\n        })\n    );\n};\n\nexport const createFunction = value => Function(`'use strict';return (${value})`)();\n\nexport const createResolved = (module, type, config, interpreter) => ({\n    type,\n    config,\n    interpreter,\n    io: io.get(interpreter),\n    run: (code, ...args) => module.run(interpreter, code, ...args),\n    runAsync: (code, ...args) => module.runAsync(interpreter, code, ...args),\n    runEvent: (...args) => module.runEvent(interpreter, ...args),\n});\n\nexport const createOverload = (module, name) => ($, pre) => {\n    const method = module[name].bind(module);\n    module[name] = (interpreter, code, ...args) =>\n        method(interpreter, `${pre ? $ : code}\\n${pre ? code : $}`, ...args);\n};\n/* c8 ignore stop */\n\nexport {\n    dedent, unescape,\n    dispatch,\n    isArray,\n    assign,\n    create,\n    defineProperties,\n    defineProperty,\n    entries,\n    all,\n    resolve,\n    absoluteURL,\n    nodeInfo,\n};\n","import '@ungap/with-resolvers';\n\nimport { getBuffer } from '../fetch-utils.js';\nimport { absoluteURL } from '../utils.js';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const io = new WeakMap();\nexport const stdio = (init) => {\n    const context = init || console;\n    const localIO = {\n        stderr: (context.stderr || console.error).bind(context),\n        stdout: (context.stdout || console.log).bind(context),\n    };\n    return {\n        stderr: (...args) => localIO.stderr(...args),\n        stdout: (...args) => localIO.stdout(...args),\n        async get(engine) {\n            const interpreter = await engine;\n            io.set(interpreter, localIO);\n            return interpreter;\n        },\n    };\n};\n\n// This should be the only helper needed for all Emscripten based FS exports\nexport const writeFile = ({ FS, PATH, PATH_FS }, path, buffer) => {\n    const absPath = PATH_FS.resolve(path);\n    FS.mkdirTree(PATH.dirname(absPath));\n    return FS.writeFile(absPath, new Uint8Array(buffer), {\n        canOwn: true,\n    });\n};\n/* c8 ignore stop */\n\n// This is instead a fallback for Lua or others\nexport const writeFileShim = (FS, path, buffer) => {\n    mkdirTree(FS, dirname(path));\n    path = resolve(FS, path);\n    return FS.writeFile(path, new Uint8Array(buffer), { canOwn: true });\n};\n\nconst dirname = (path) => {\n    const tree = path.split('/');\n    tree.pop();\n    return tree.join('/');\n};\n\nconst mkdirTree = (FS, path) => {\n    const current = [];\n    for (const branch of path.split('/')) {\n        if (branch === '.') continue;\n        current.push(branch);\n        if (branch) FS.mkdir(current.join('/'));\n    }\n};\n\nconst resolve = (FS, path) => {\n    const tree = [];\n    for (const branch of path.split('/')) {\n        switch (branch) {\n            case '':\n                break;\n            case '.':\n                break;\n            case '..':\n                tree.pop();\n                break;\n            default:\n                tree.push(branch);\n        }\n    }\n    return [FS.cwd()].concat(tree).join('/').replace(/^\\/+/, '/');\n};\n\nimport { all, isArray } from '../utils.js';\n\nconst calculateFetchPaths = (config_fetch) => {\n    // REQUIRES INTEGRATION TEST\n    /* c8 ignore start */\n    for (const { files, to_file, from = '' } of config_fetch) {\n        if (files !== undefined && to_file !== undefined)\n            throw new Error(\n                'Cannot use \\'to_file\\' and \\'files\\' parameters together!',\n            );\n        if (files === undefined && to_file === undefined && from.endsWith('/'))\n            throw new Error(\n                `Couldn't determine the filename from the path ${from}, please supply 'to_file' parameter.`,\n            );\n    }\n    /* c8 ignore stop */\n    return config_fetch.flatMap(\n        ({ from = '', to_folder = '.', to_file, files }) => {\n            if (isArray(files))\n                return files.map((file) => ({\n                    url: joinPaths([from, file]),\n                    path: joinPaths([to_folder, file]),\n                }));\n            const filename = to_file || from.slice(1 + from.lastIndexOf('/'));\n            return [{ url: from, path: joinPaths([to_folder, filename]) }];\n        },\n    );\n};\n\nconst joinPaths = (parts) => {\n    const res = parts\n        .map((part) => part.trim().replace(/(^[/]*|[/]*$)/g, ''))\n        .filter((p) => p !== '' && p !== '.')\n        .join('/');\n\n    return parts[0].startsWith('/') ? `/${res}` : res;\n};\n\nconst fetchResolved = (config_fetch, url) =>\n    fetch(absoluteURL(url, base.get(config_fetch)));\n\nexport const base = new WeakMap();\n\n/* c8 ignore start */\nexport const fetchPaths = (module, interpreter, config_fetch) =>\n    all(\n        calculateFetchPaths(config_fetch).map(({ url, path }) =>\n            fetchResolved(config_fetch, url)\n                .then(getBuffer)\n                .then((buffer) => module.writeFile(interpreter, path, buffer)),\n        ),\n    );\n\n    const fillName = (source, dest) => dest.endsWith('/') ?\n                        `${dest}${source.split('/').pop()}` : dest;\n\nconst parseTemplate = (src, map) => src.replace(\n  /\\{.+?\\}/g,\n  k => {\n    if (!map.has(k))\n      throw new SyntaxError(`Invalid template: ${k}`);\n    return map.get(k);\n  }\n);\n\nconst calculateFilesPaths = files => {\n  const map = new Map;\n  const targets = new Set;\n  const sourceDest = [];\n  for (const [source, dest] of Object.entries(files)) {\n    if (/^\\{.+\\}$/.test(source)) {\n      if (map.has(source))\n        throw new SyntaxError(`Duplicated template: ${source}`);\n      map.set(source, parseTemplate(dest, map));\n    }\n    else {\n      const url = parseTemplate(source, map);\n      const path = fillName(url, parseTemplate(dest || './', map));\n      if (targets.has(path))\n        throw new SyntaxError(`Duplicated destination: ${path}`);\n      targets.add(path);\n      sourceDest.push({ url, path });\n    }\n  }\n  return sourceDest;\n};\n\nexport const fetchFiles = (module, interpreter, config_files) =>\n    all(\n        calculateFilesPaths(config_files).map(({ url, path }) =>\n            fetchResolved(config_files, url)\n                .then(getBuffer)\n                .then((buffer) => module.writeFile(interpreter, path, buffer)),\n        ),\n    );\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { io } from './_utils.js';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const registerJSModule = (interpreter, name, value) => {\n    interpreter.registerJsModule(name, value);\n};\n\nexport const run = (interpreter, code, ...args) => {\n    try {\n        return interpreter.runPython(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runAsync = async (interpreter, code, ...args) => {\n    try {\n        return await interpreter.runPythonAsync(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runEvent = async (interpreter, code, event) => {\n    // allows method(event) as well as namespace.method(event)\n    // it does not allow fancy brackets names for now\n    const [name, ...keys] = code.split('.');\n    let target = interpreter.globals.get(name);\n    let context;\n    for (const key of keys) [context, target] = [target, target[key]];\n    try {\n        await target.call(context, event);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n/* c8 ignore stop */\n","import { fetchFiles, fetchPaths, stdio, writeFile } from './_utils.js';\nimport { registerJSModule, run, runAsync, runEvent } from './_python.js';\n\nconst type = 'micropython';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    module: (version = '1.20.0-297') =>\n        `https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${version}/micropython.mjs`,\n    async engine({ loadMicroPython }, config, url) {\n        const { stderr, stdout, get } = stdio();\n        url = url.replace(/\\.m?js$/, '.wasm');\n        const interpreter = await get(loadMicroPython({ stderr, stdout, url }));\n        if (config.files) await fetchFiles(this, interpreter, config.files);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch);\n        return interpreter;\n    },\n    registerJSModule,\n    run,\n    runAsync,\n    runEvent,\n    transform: (_, value) => value,\n    writeFile: ({ FS, _module: { PATH, PATH_FS } }, path, buffer) =>\n        writeFile({ FS, PATH, PATH_FS }, path, buffer),\n};\n/* c8 ignore stop */\n","import { fetchFiles, fetchPaths, stdio, writeFile } from './_utils.js';\nimport { registerJSModule, run, runAsync, runEvent } from './_python.js';\n\nconst type = 'pyodide';\nconst toJsOptions = { dict_converter: Object.fromEntries };\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    module: (version = '0.24.1') =>\n        `https://cdn.jsdelivr.net/pyodide/v${version}/full/pyodide.mjs`,\n    async engine({ loadPyodide }, config, url) {\n        const { stderr, stdout, get } = stdio();\n        const indexURL = url.slice(0, url.lastIndexOf('/'));\n        const interpreter = await get(\n            loadPyodide({ stderr, stdout, indexURL }),\n        );\n        if (config.files) await fetchFiles(this, interpreter, config.files);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch);\n        if (config.packages) {\n            await interpreter.loadPackage('micropip');\n            const micropip = await interpreter.pyimport('micropip');\n            await micropip.install(config.packages);\n            micropip.destroy();\n        }\n        return interpreter;\n    },\n    registerJSModule,\n    run,\n    runAsync,\n    runEvent,\n    transform: (interpreter, value) => (\n        value instanceof interpreter.ffi.PyProxy ?\n            value.toJs(toJsOptions) :\n            value\n    ),\n    writeFile: ({ FS, PATH, _module: { PATH_FS } }, path, buffer) =>\n        writeFile({ FS, PATH, PATH_FS }, path, buffer),\n};\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { fetchFiles, fetchPaths } from './_utils.js';\n\nconst type = 'ruby-wasm-wasi';\nconst jsType = type.replace(/\\W+/g, '_');\n\n// MISSING:\n//  * there is no VFS apparently or I couldn't reach any\n//  * I've no idea how to override the stderr and stdout\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    experimental: true,\n    module: (version = '2.1.0') =>\n        `https://cdn.jsdelivr.net/npm/ruby-3_2-wasm-wasi@${version}/dist/browser.esm.js`,\n    async engine({ DefaultRubyVM }, config, url) {\n        const response = await fetch(\n            `${url.slice(0, url.lastIndexOf('/'))}/ruby.wasm`,\n        );\n        const module = await WebAssembly.compile(await response.arrayBuffer());\n        const { vm: interpreter } = await DefaultRubyVM(module);\n        if (config.files) await fetchFiles(this, interpreter, config.files);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(interpreter, name, value) {\n        const id = `__module_${jsType}_${name}`;\n        globalThis[id] = value;\n        this.run(interpreter, `require \"js\";$${name}=JS.global[:${id}]`);\n        delete globalThis[id];\n    },\n    run: (interpreter, code, ...args) => interpreter.eval(dedent(code), ...args),\n    runAsync: (interpreter, code, ...args) => interpreter.evalAsync(dedent(code), ...args),\n    async runEvent(interpreter, code, event) {\n        // patch common xworker.onmessage/onerror cases\n        if (/^xworker\\.(on\\w+)$/.test(code)) {\n            const { $1: name } = RegExp;\n            const id = `__module_${jsType}_event`;\n            globalThis[id] = event;\n            this.run(\n                interpreter,\n                `require \"js\";$xworker.call(\"${name}\",JS.global[:${id}])`,\n            );\n            delete globalThis[id];\n        } else {\n            // Experimental: allows only events by fully qualified method name\n            const method = this.run(interpreter, `method(:${code})`);\n            await method.call(code, interpreter.wrap(event));\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: () => {\n        throw new Error(`writeFile is not supported in ${type}`);\n    },\n};\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { fetchFiles, fetchPaths, io, stdio, writeFileShim } from './_utils.js';\n\nconst type = 'wasmoon';\n\n// MISSING:\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    module: (version = '1.15.0') =>\n        `https://cdn.jsdelivr.net/npm/wasmoon@${version}/+esm`,\n    async engine({ LuaFactory, LuaLibraries }, config) {\n        const { stderr, stdout, get } = stdio();\n        const interpreter = await get(new LuaFactory().createEngine());\n        interpreter.global.getTable(LuaLibraries.Base, (index) => {\n            interpreter.global.setField(index, 'print', stdout);\n            interpreter.global.setField(index, 'printErr', stderr);\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields\n    registerJSModule: (interpreter, name, value) => {\n        interpreter.global.set(name, value);\n    },\n    run: (interpreter, code, ...args) => {\n        try {\n            return interpreter.doStringSync(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runAsync: async (interpreter, code, ...args) => {\n        try {\n            return await interpreter.doString(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runEvent: async (interpreter, code, event) => {\n        // allows method(event) as well as namespace.method(event)\n        // it does not allow fancy brackets names for now\n        const [name, ...keys] = code.split('.');\n        let target = interpreter.global.get(name);\n        let context;\n        for (const key of keys) [context, target] = [target, target[key]];\n        try {\n            await target.call(context, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: (\n        {\n            cmodule: {\n                module: { FS },\n            },\n        },\n        path,\n        buffer,\n    ) => writeFileShim(FS, path, buffer),\n};\n/* c8 ignore stop */\n","// ⚠️ Part of this file is automatically generated\n//    The :RUNTIMES comment is a delimiter and no code should be written/changed after\n//    See rollup/build_interpreters.cjs to know more\n\nimport { base } from './interpreter/_utils.js';\n\n/** @type {Map<string, object>} */\nexport const registry = new Map();\n\n/** @type {Map<string, object>} */\nexport const configs = new Map();\n\n/** @type {string[]} */\nexport const selectors = [];\n\n/** @type {string[]} */\nexport const prefixes = [];\n\nexport const interpreter = new Proxy(new Map(), {\n    get(map, id) {\n        if (!map.has(id)) {\n            const [type, ...rest] = id.split('@');\n            const interpreter = registry.get(type);\n            const url = /^(?:\\.?\\.?\\/|https?:\\/\\/)/i.test(rest) \n                ? rest.join('@')\n                : interpreter.module(...rest);\n            map.set(id, {\n                url,\n                module: import(/* webpackIgnore: true */url),\n                engine: interpreter.engine.bind(interpreter),\n            });\n        }\n        const { url, module, engine } = map.get(id);\n        return (config, baseURL) =>\n            module.then((module) => {\n                configs.set(id, config);\n                for (const entry of ['files', 'fetch']) {\n                    const value = config?.[entry];\n                    if (value) base.set(value, baseURL);\n                }\n                return engine(module, config, url);\n            });\n    },\n});\n\nconst register = (interpreter) => {\n    for (const type of [].concat(interpreter.type)) {\n        registry.set(type, interpreter);\n        selectors.push(`script[type=\"${type}\"]`);\n        prefixes.push(`${type}-`);\n    }\n};\n\n//:RUNTIMES\nimport micropython from './interpreter/micropython.js';\nimport pyodide from './interpreter/pyodide.js';\nimport ruby_wasm_wasi from './interpreter/ruby-wasm-wasi.js';\nimport wasmoon from './interpreter/wasmoon.js';\nfor (const interpreter of [micropython, pyodide, ruby_wasm_wasi, wasmoon])\n    register(interpreter);\n","// lazy TOML parser (fast-toml might be a better alternative)\nconst TOML_LIB = 'https://cdn.jsdelivr.net/npm/basic-toml@0.3.1/es.js';\n\n/**\n * @param {string} text TOML text to parse\n * @returns {object} the resulting JS object\n */\nexport const parse = async (text) => (await import(/* webpackIgnore: true */TOML_LIB)).parse(text);\n","import { interpreter } from './interpreters.js';\nimport { absoluteURL, resolve } from './utils.js';\nimport { parse } from './toml.js';\nimport { getJSON, getText } from './fetch-utils.js';\n\nexport const getConfigURLAndType = config => {\n    // REQUIRES INTEGRATION TEST\n    /* c8 ignore start */\n    let type = typeof config;\n    if (type === 'string' && /\\.(json|toml|txt)$/.test(config))\n        type = RegExp.$1;\n    else\n        config = './config.txt';\n    return [absoluteURL(config), type];\n    /* c8 ignore stop */\n};\n\n/**\n * Parse a generic config if it came from an attribute either as URL\n * or as a serialized string. In XWorker case, accepts a pre-defined\n * options to use as it is to avoid needing at all a fetch operation.\n * In latter case, config will be suffixed as `config.txt`.\n * @param {string} id the interpreter name @ version identifier\n * @param {string} [config] optional config file to parse\n * @param {object} [options] optional options used to bootstrap XWorker\n * @returns\n */\nexport const getRuntime = (id, config, options = {}) => {\n    if (config) {\n        // REQUIRES INTEGRATION TEST\n        /* c8 ignore start */\n        const [absolute, type] = getConfigURLAndType(config);\n        if (type === 'json') {\n            options = fetch(absolute).then(getJSON);\n        } else if (type === 'toml') {\n            options = fetch(absolute).then(getText).then(parse);\n        } else if (type === 'string') {\n            try {\n                options = JSON.parse(config);\n            } catch (_) {\n                options = parse(config);\n            }\n        } else if (type === 'object' && config) {\n            options = config;\n        }\n        config = absolute;\n        /* c8 ignore stop */\n    }\n    return resolve(options).then(options => interpreter[id](options, config));\n};\n\n/**\n * @param {string} type the interpreter type\n * @param {string} [version] the optional interpreter version\n * @returns\n */\nexport const getRuntimeID = (type, version = '') =>\n    `${type}@${version}`.replace(/@$/, '');\n","const beforeRun = 'BeforeRun';\nconst afterRun = 'AfterRun';\n\nexport const code = [\n    `code${beforeRun}`,\n    `code${beforeRun}Async`,\n    `code${afterRun}`,\n    `code${afterRun}Async`,\n];\n\nexport const js = [\n    'onWorker',\n    'onReady',\n    `on${beforeRun}`,\n    `on${beforeRun}Async`,\n    `on${afterRun}`,\n    `on${afterRun}Async`,\n];\n\n/* c8 ignore start */\n/**\n * Created the wrapper to pass along hooked callbacks.\n * @param {object} module the details module\n * @param {object} ref the node or reference to pass as second argument\n * @param {boolean} isAsync if run should be async\n * @param {function?} before callback to run before\n * @param {function?} after callback to run after\n * @returns {object}\n */\nexport const polluteJS = (module, resolved, ref, isAsync, before, after) => {\n    if (before || after) {\n        const name = isAsync ? 'runAsync' : 'run';\n        const method = module[name];\n        module[name] = isAsync ?\n            async function (interpreter, code, ...args) {\n                if (before) await before.call(this, resolved, ref);\n                const result = await method.call(\n                    this,\n                    interpreter,\n                    code,\n                    ...args\n                );\n                if (after) await after.call(this, resolved, ref);\n                return result;\n            } :\n            function (interpreter, code, ...args) {\n                if (before) before.call(this, resolved, ref);\n                const result = method.call(this, interpreter, code, ...args);\n                if (after) after.call(this, resolved, ref);\n                return result;\n            }\n        ;\n    }\n};\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { js as jsHooks, code as codeHooks } from '../hooks.js';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default class Hook {\n    constructor(interpreter, hooks = {}) {\n        const { main, worker } = hooks;\n        this.interpreter = interpreter;\n        this.onWorker = main?.onWorker;\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1))\n            this[key] = worker?.[key];\n        for (const key of codeHooks)\n            this[key] = worker?.[key];\n    }\n    toJSON() {\n        const hooks = {};\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1)) {\n            if (this[key]) hooks[key] = String(this[key]);\n        }\n        // code related: exclude `onReady` callback\n        for (const key of codeHooks) {\n            if (this[key]) hooks[key] = dedent(this[key]());\n        }\n        return hooks;\n    }\n}\n/* c8 ignore stop */\n","import * as JSON from '@ungap/structured-clone/json';\nimport coincident from 'coincident/window';\nimport xworker from './xworker.js';\nimport { getConfigURLAndType } from '../loader.js';\nimport { assign, create, defineProperties } from '../utils.js';\nimport { getText } from '../fetch-utils.js';\nimport Hook from './hook.js';\n\n/**\n * @typedef {Object} WorkerOptions custom configuration\n * @prop {string} type the interpreter type to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string} [config] the optional config to use within such interpreter\n */\n\nexport default (...args) =>\n    /**\n     * A XWorker is a Worker facade able to bootstrap a channel with any desired interpreter.\n     * @param {string} url the remote file to evaluate on bootstrap\n     * @param {WorkerOptions} [options] optional arguments to define the interpreter to use\n     * @returns {Worker}\n     */\n    function XWorker(url, options) {\n        const worker = xworker();\n        const { postMessage } = worker;\n        const isHook = this instanceof Hook;\n\n        if (args.length) {\n            const [type, version] = args;\n            options = assign({}, options || { type, version });\n            if (!options.type) options.type = type;\n        }\n\n        // provide a base url to fetch or load config files from a Worker\n        // because there's no location at all in the Worker as it's embedded.\n        // fallback to a generic, ignored, config.txt file to still provide a URL.\n        const [ config ] = getConfigURLAndType(options.config);\n\n        const bootstrap = fetch(url)\n            .then(getText)\n            .then(code => {\n                const hooks = isHook ? this.toJSON() : void 0;\n                postMessage.call(worker, { options, config, code, hooks });\n            });\n\n        defineProperties(worker, {\n            postMessage: {\n                value: (data, ...rest) =>\n                    bootstrap.then(() =>\n                        postMessage.call(worker, data, ...rest),\n                    ),\n            },\n            sync: {\n                value: coincident(worker, JSON).proxy,\n            },\n            onerror: {\n                writable: true,\n                configurable: true,\n                value: console.error\n            }\n        });\n\n        worker.addEventListener('message', event => {\n            const { data } = event;\n            if (data instanceof Error) {\n                event.stopImmediatePropagation();\n                worker.onerror(create(event, {\n                    type: { value: 'error' },\n                    error: { value: data }\n                }));\n            }\n        });\n\n        if (isHook) this.onWorker?.(this.interpreter, worker);\n\n        return worker;\n    };\n","/* c8 ignore next */\nexport default () => new Worker(URL.createObjectURL(new Blob([\"const e=\\\"object\\\"==typeof self?self:globalThis,t=t=>((t,r)=>{const n=(e,r)=>(t.set(r,e),e),s=o=>{if(t.has(o))return t.get(o);const[a,i]=r[o];switch(a){case 0:case-1:return n(i,o);case 1:{const e=n([],o);for(const t of i)e.push(s(t));return e}case 2:{const e=n({},o);for(const[t,r]of i)e[s(t)]=s(r);return e}case 3:return n(new Date(i),o);case 4:{const{source:e,flags:t}=i;return n(new RegExp(e,t),o)}case 5:{const e=n(new Map,o);for(const[t,r]of i)e.set(s(t),s(r));return e}case 6:{const e=n(new Set,o);for(const t of i)e.add(s(t));return e}case 7:{const{name:t,message:r}=i;return n(new e[t](r),o)}case 8:return n(BigInt(i),o);case\\\"BigInt\\\":return n(Object(BigInt(i)),o)}return n(new e[a](i),o)};return s})(new Map,t)(0),r=\\\"\\\",{toString:n}={},{keys:s}=Object,o=e=>{const t=typeof e;if(\\\"object\\\"!==t||!e)return[0,t];const s=n.call(e).slice(8,-1);switch(s){case\\\"Array\\\":return[1,r];case\\\"Object\\\":return[2,r];case\\\"Date\\\":return[3,r];case\\\"RegExp\\\":return[4,r];case\\\"Map\\\":return[5,r];case\\\"Set\\\":return[6,r]}return s.includes(\\\"Array\\\")?[1,s]:s.includes(\\\"Error\\\")?[7,s]:[2,s]},a=([e,t])=>0===e&&(\\\"function\\\"===t||\\\"symbol\\\"===t),i=(e,{json:t,lossy:r}={})=>{const n=[];return((e,t,r,n)=>{const i=(e,t)=>{const s=n.push(e)-1;return r.set(t,s),s},c=n=>{if(r.has(n))return r.get(n);let[l,u]=o(n);switch(l){case 0:{let t=n;switch(u){case\\\"bigint\\\":l=8,t=n.toString();break;case\\\"function\\\":case\\\"symbol\\\":if(e)throw new TypeError(\\\"unable to serialize \\\"+u);t=null;break;case\\\"undefined\\\":return i([-1],n)}return i([l,t],n)}case 1:{if(u)return i([u,[...n]],n);const e=[],t=i([l,e],n);for(const t of n)e.push(c(t));return t}case 2:{if(u)switch(u){case\\\"BigInt\\\":return i([u,n.toString()],n);case\\\"Boolean\\\":case\\\"Number\\\":case\\\"String\\\":return i([u,n.valueOf()],n)}if(t&&\\\"toJSON\\\"in n)return c(n.toJSON());const r=[],f=i([l,r],n);for(const t of s(n))!e&&a(o(n[t]))||r.push([c(t),c(n[t])]);return f}case 3:return i([l,n.toISOString()],n);case 4:{const{source:e,flags:t}=n;return i([l,{source:e,flags:t}],n)}case 5:{const t=[],r=i([l,t],n);for(const[r,s]of n)(e||!a(o(r))&&!a(o(s)))&&t.push([c(r),c(s)]);return r}case 6:{const t=[],r=i([l,t],n);for(const r of n)!e&&a(o(r))||t.push(c(r));return r}}const{message:f}=n;return i([l,{name:u,message:f}],n)};return c})(!(t||r),!!t,new Map,n)(e),n},{parse:c,stringify:l}=JSON,u={json:!0,lossy:!0};var f=Object.freeze({__proto__:null,parse:e=>t(c(e)),stringify:e=>l(i(e,u))});const p=\\\"49775373-4961-44cd-9a4b-651a0c9cca5a\\\",d=\\\"M\\\"+p,y=\\\"T\\\"+p,h=\\\"object\\\",g=\\\"function\\\",w=\\\"number\\\",m=\\\"string\\\",b=\\\"undefined\\\",v=\\\"symbol\\\";var $=e=>({value:new Promise((t=>{let r=new Worker(\\\"data:application/javascript,onmessage%3D(%7Bdata%3Ab%7D)%3D%3E(Atomics.wait(b%2C0)%2CpostMessage(0))\\\");r.onmessage=t,r.postMessage(e)}))})\\n/*! (c) Andrea Giammarchi - ISC */;const{Int32Array:S,Map:E,SharedArrayBuffer:A,Uint16Array:P}=globalThis,{BYTES_PER_ELEMENT:j}=S,{BYTES_PER_ELEMENT:M}=P,{isArray:k}=Array,{notify:x,wait:T,waitAsync:_}=Atomics,{fromCharCode:O}=String,W=new WeakSet,F=new WeakMap,R={value:{then:e=>e()}};let B=0;const J=(e,{parse:t=JSON.parse,stringify:r=JSON.stringify,transform:n,interrupt:s}=JSON)=>{if(!F.has(e)){const o=(t,...r)=>e.postMessage({[p]:r},{transfer:t}),a=typeof s===g?s:s?.handler,i=s?.delay||42,c=(e,t)=>e?(_||$)(t,0):(a?((e,t,r)=>{for(;\\\"timed-out\\\"===T(e,0,0,t);)r()})(t,i,a):T(t,0),R);let l=!1;F.set(e,new Proxy(new E,{has:(e,t)=>\\\"string\\\"==typeof t&&!t.startsWith(\\\"_\\\"),get:(r,s)=>\\\"then\\\"===s?null:(...r)=>{const a=B++;let i=new S(new A(2*j)),u=[];W.has(r.at(-1)||u)&&W.delete(u=r.pop()),o(u,a,i,s,n?r.map(n):r);const f=e!==globalThis;let p=0;return l&&f&&(p=setTimeout(console.warn,1e3,`💀🔒 - Possible deadlock if proxy.${s}(...args) is awaited`)),c(f,i).value.then((()=>{clearTimeout(p);const e=i[1];if(!e)return;const r=M*e;return i=new S(new A(r+r%j)),o([],a,i),c(f,i).value.then((()=>{const r=new P(i.buffer).slice(0,e),n=[];for(let t=0;t<e;t+=2048)n.push(O(...r.slice(t,t+2048)));return t(n.join(\\\"\\\"))}))}))},set(t,s,o){const a=typeof o;if(a!==g)throw new Error(`Unable to assign ${s} as ${a}`);if(!t.size){const s=new E;e.addEventListener(\\\"message\\\",(async e=>{const o=e.data?.[p];if(k(o)){e.stopImmediatePropagation();const[a,i,...c]=o;let u;if(c.length){const[e,o]=c;if(t.has(e)){l=!0;try{const c=await t.get(e)(...o);if(void 0!==c){const e=r(n?n(c):c);s.set(a,e),i[1]=e.length}}catch(e){u=e}finally{l=!1}}else u=new Error(`Unsupported action: ${e}`);i[0]=1}else{const e=s.get(a);s.delete(a);for(let t=new P(i.buffer),r=0;r<e.length;r++)t[r]=e.charCodeAt(r)}if(x(i,0),u)throw u}}))}return!!t.set(s,o)}}))}return F.get(e)};J.transfer=(...e)=>(W.add(e),e);const I=new FinalizationRegistry((([e,t,r])=>{r&&console.debug(`Held value ${String(t)} not relevant anymore`),e(t)})),C=Object.create(null),L=(e,t,{debug:r,return:n,token:s=e}=C)=>{const o=n||new Proxy(e,C),a=[o,[t,e,!!r]];return!1!==s&&a.push(s),I.register(...a),o},{defineProperty:D,getOwnPropertyDescriptor:H,getPrototypeOf:N,isExtensible:U,ownKeys:z,preventExtensions:q,set:K,setPrototypeOf:Y}=Reflect,{assign:G,create:V}=Object,Q=N(Int8Array),X=\\\"isArray\\\",Z=(e,t)=>{const{get:r,set:n,value:s}=e;return r&&(e.get=t(r)),n&&(e.set=t(n)),s&&(e.value=t(s)),e},ee=(e,t)=>[e,t],te=e=>t=>{const r=typeof t;switch(r){case h:if(null==t)return ee(\\\"null\\\",t);if(t===globalThis)return ee(h,null);case g:return e(r,t);case\\\"boolean\\\":case w:case m:case b:case\\\"bigint\\\":return ee(r,t);case v:if(re.has(t))return ee(r,re.get(t))}throw new Error(`Unable to handle this ${r} type`)},re=new Map(z(Symbol).filter((e=>typeof Symbol[e]===v)).map((e=>[Symbol[e],e]))),ne=e=>{for(const[t,r]of re)if(r===e)return t},se=e=>e;function oe(){return this}const ae=\\\"apply\\\",ie=\\\"construct\\\",ce=\\\"defineProperty\\\",le=\\\"deleteProperty\\\",ue=\\\"get\\\",fe=\\\"getOwnPropertyDescriptor\\\",pe=\\\"getPrototypeOf\\\",de=\\\"has\\\",ye=\\\"isExtensible\\\",he=\\\"ownKeys\\\",ge=\\\"preventExtensions\\\",we=\\\"set\\\",me=\\\"setPrototypeOf\\\",be=\\\"delete\\\";var ve=((e,t)=>{const r=t&&new WeakMap;if(t){const{addEventListener:e}=EventTarget.prototype;D(EventTarget.prototype,\\\"addEventListener\\\",{value(t,n,...s){return s.at(0)?.invoke&&(r.has(this)||r.set(this,new Map),r.get(this).set(t,[].concat(s[0].invoke)),delete s[0].invoke),e.call(this,t,n,...s)}})}const n=t&&(e=>{const{currentTarget:t,target:n,type:s}=e;for(const o of r.get(t||n)?.get(s)||[])e[o]()});return function(r,s,o,...a){let i=0,c=this?.transform||se;const l=new Map,u=new Map,{[o]:f}=r,p=a.length?G(V(globalThis),...a):globalThis,d=te(((e,t)=>{if(!l.has(t)){let r;for(;u.has(r=i++););l.set(t,r),u.set(r,e===h?c(t):t)}return ee(e,l.get(t))})),y=e=>{f(be,ee(m,e))},$=([e,r])=>{switch(e){case h:if(null==r)return p;if(typeof r===w)return u.get(r);if(!(r instanceof Q))for(const e in r)r[e]=$(r[e]);return r;case g:if(typeof r===m){if(!u.has(r)){const e=function(...e){return t&&e.at(0)instanceof Event&&n(...e),f(ae,ee(g,r),d(this),e.map(d))};return u.set(r,new WeakRef(e)),L(r,y,{return:e,token:!1})}return u.get(r).deref()}return u.get(r);case v:return ne(r)}return r},S={[ae]:(e,t,r)=>d(e.apply(t,r)),[ie]:(e,t)=>d(new e(...t)),[ce]:(e,t,r)=>d(D(e,t,r)),[le]:(e,t)=>d(delete e[t]),[pe]:e=>d(N(e)),[ue]:(e,t)=>d(e[t]),[fe]:(e,t)=>{const r=H(e,t);return r?ee(h,Z(r,d)):ee(b,r)},[de]:(e,t)=>d(t in e),[ye]:e=>d(U(e)),[he]:e=>ee(h,z(e).map(d)),[ge]:e=>d(q(e)),[we]:(e,t,r)=>d(K(e,t,r)),[me]:(e,t)=>d(Y(e,t)),[be](e){l.delete(u.get(e)),u.delete(e)}};return r[s]=(e,t,...r)=>{switch(e){case ae:r[0]=$(r[0]),r[1]=r[1].map($);break;case ie:r[0]=r[0].map($);break;case ce:{const[e,t]=r;r[0]=$(e);const{get:n,set:s,value:o}=t;n&&(t.get=$(n)),s&&(t.set=$(s)),o&&(t.value=$(o));break}default:r=r.map($)}return S[e]($(t),...r)},{proxy:r,[e.toLowerCase()]:p,[`is${e}Proxy`]:()=>!1}}})(\\\"Window\\\",!0),$e=(e=>{let t=0;const r=new Map,n=new Map,s=Symbol(),o=e=>typeof e===g?e():e,a=e=>typeof e===h&&!!e&&s in e,i=Array[X];return function(c,l,u){const f=this?.transform||se,{[l]:p}=c,d=new Map,y=e=>{d.delete(e),p(be,b(e))},b=te(((e,a)=>{if(s in a)return o(a[s]);if(e===g){if(a=f(a),!n.has(a)){let e;for(;n.has(e=String(t++)););r.set(a,e),n.set(e,a)}return ee(e,r.get(a))}if(!(a instanceof Q)){e===h&&(a=f(a));for(const e in a)a[e]=b(a[e])}return ee(e,a)})),$=e=>{const[t,r]=e;if(!d.has(r)){const n=t===g?oe.bind(e):e,s=new Proxy(n,A);return d.set(r,new WeakRef(s)),L(r,y,{return:s,token:!1})}return d.get(r).deref()},S=e=>{const[t,r]=e;switch(t){case h:return null===r?globalThis:typeof r===w?$(e):r;case g:return typeof r===m?n.get(r):$(e);case v:return ne(r)}return r},E=(e,t,...r)=>S(p(e,o(t),...r)),A={[ae]:(e,t,r)=>E(ae,e,b(t),r.map(b)),[ie]:(e,t)=>E(ie,e,t.map(b)),[ce]:(e,t,r)=>{const{get:n,set:s,value:o}=r;return typeof n===g&&(r.get=b(n)),typeof s===g&&(r.set=b(s)),typeof o===g&&(r.value=b(o)),E(ce,e,b(t),r)},[le]:(e,t)=>E(le,e,b(t)),[pe]:e=>E(pe,e),[ue]:(e,t)=>t===s?e:E(ue,e,b(t)),[fe]:(e,t)=>{const r=E(fe,e,b(t));return r&&Z(r,S)},[de]:(e,t)=>t===s||E(de,e,b(t)),[ye]:e=>E(ye,e),[he]:e=>E(he,e).map(S),[ge]:e=>E(ge,e),[we]:(e,t,r)=>E(we,e,b(t),b(r)),[me]:(e,t)=>E(me,e,b(t))};c[u]=(e,t,s,o)=>{switch(e){case ae:return S(t).apply(S(s),o.map(S));case be:{const e=S(t);r.delete(n.get(e)),n.delete(e)}}};const P=new Proxy([h,null],A),j=P.Array[X];return D(Array,X,{value:e=>a(e)?j(e):i(e)}),{[e.toLowerCase()]:P,[`is${e}Proxy`]:a,proxy:c}}})(\\\"Window\\\"),Se=typeof Worker===g?Worker:class{};const Ee=new WeakMap,Ae=(e,...t)=>{const r=J(e,...t);if(!Ee.has(r)){const n=e instanceof Se?ve:$e;Ee.set(r,n.call(t.at(0),r,d,y))}return Ee.get(r)};Ae.transfer=J.transfer;const Pe={object(...e){return this.string(function(e){for(var t=e[0],r=1,n=arguments.length;r<n;r++)t+=arguments[r]+e[r];return t}(...e))},string(e){for(const t of e.split(/[\\\\r\\\\n]+/))if(t.trim().length){/^(\\\\s+)/.test(t)&&(e=e.replace(new RegExp(\\\"^\\\"+RegExp.$1,\\\"gm\\\"),\\\"\\\"));break}return e}},je=(e,...t)=>Pe[typeof e](e,...t);Promise.withResolvers||(Promise.withResolvers=function(){var e,t,r=new this((function(r,n){e=r,t=n}));return{resolve:e,reject:t,promise:r}});const Me=e=>e.arrayBuffer(),ke=e=>e.json(),xe=e=>e.text(),Te=new WeakMap,_e=e=>{const t=e||console,r={stderr:(t.stderr||console.error).bind(t),stdout:(t.stdout||console.log).bind(t)};return{stderr:(...e)=>r.stderr(...e),stdout:(...e)=>r.stdout(...e),async get(e){const t=await e;return Te.set(t,r),t}}},Oe=({FS:e,PATH:t,PATH_FS:r},n,s)=>{const o=r.resolve(n);return e.mkdirTree(t.dirname(o)),e.writeFile(o,new Uint8Array(s),{canOwn:!0})},We=e=>{const t=e.split(\\\"/\\\");return t.pop(),t.join(\\\"/\\\")},Fe=(e,t)=>{const r=[];for(const n of t.split(\\\"/\\\"))\\\".\\\"!==n&&(r.push(n),n&&e.mkdir(r.join(\\\"/\\\")))},Re=(e,t)=>{const r=[];for(const e of t.split(\\\"/\\\"))switch(e){case\\\"\\\":case\\\".\\\":break;case\\\"..\\\":r.pop();break;default:r.push(e)}return[e.cwd()].concat(r).join(\\\"/\\\").replace(/^\\\\/+/,\\\"/\\\")},Be=e=>{const t=e.map((e=>e.trim().replace(/(^[/]*|[/]*$)/g,\\\"\\\"))).filter((e=>\\\"\\\"!==e&&\\\".\\\"!==e)).join(\\\"/\\\");return e[0].startsWith(\\\"/\\\")?`/${t}`:t},Je=(e,t)=>fetch(Qe(t,Ie.get(e))),Ie=new WeakMap,Ce=(e,t,r)=>Ge((e=>{for(const{files:t,to_file:r,from:n=\\\"\\\"}of e){if(void 0!==t&&void 0!==r)throw new Error(\\\"Cannot use 'to_file' and 'files' parameters together!\\\");if(void 0===t&&void 0===r&&n.endsWith(\\\"/\\\"))throw new Error(`Couldn't determine the filename from the path ${n}, please supply 'to_file' parameter.`)}return e.flatMap((({from:e=\\\"\\\",to_folder:t=\\\".\\\",to_file:r,files:n})=>{if(Ne(n))return n.map((r=>({url:Be([e,r]),path:Be([t,r])})));const s=r||e.slice(1+e.lastIndexOf(\\\"/\\\"));return[{url:e,path:Be([t,s])}]}))})(r).map((({url:n,path:s})=>Je(r,n).then(Me).then((r=>e.writeFile(t,s,r)))))),Le=(e,t)=>t.endsWith(\\\"/\\\")?`${t}${e.split(\\\"/\\\").pop()}`:t,De=(e,t)=>e.replace(/\\\\{.+?\\\\}/g,(e=>{if(!t.has(e))throw new SyntaxError(`Invalid template: ${e}`);return t.get(e)})),He=(e,t,r)=>Ge((e=>{const t=new Map,r=new Set,n=[];for(const[s,o]of Object.entries(e))if(/^\\\\{.+\\\\}$/.test(s)){if(t.has(s))throw new SyntaxError(`Duplicated template: ${s}`);t.set(s,De(o,t))}else{const e=De(s,t),a=Le(e,De(o||\\\"./\\\",t));if(r.has(a))throw new SyntaxError(`Duplicated destination: ${a}`);r.add(a),n.push({url:e,path:a})}return n})(r).map((({url:n,path:s})=>Je(r,n).then(Me).then((r=>e.writeFile(t,s,r)))))),{isArray:Ne}=Array,{assign:Ue,create:ze,defineProperties:qe,defineProperty:Ke,entries:Ye}=Object,{all:Ge,resolve:Ve}=new Proxy(Promise,{get:(e,t)=>e[t].bind(e)}),Qe=(e,t=location.href)=>new URL(e,t.replace(/^blob:/,\\\"\\\")).href,Xe=(e,t,r,n=!1,s=CustomEvent)=>{e.dispatchEvent(new s(`${t}:${r}`,{bubbles:!0,detail:{worker:n}}))},Ze=e=>Function(`'use strict';return (${e})`)(),et=(e,t,r)=>{e.registerJsModule(t,r)},tt=(e,t,...r)=>{try{return e.runPython(je(t),...r)}catch(t){Te.get(e).stderr(t)}},rt=async(e,t,...r)=>{try{return await e.runPythonAsync(je(t),...r)}catch(t){Te.get(e).stderr(t)}},nt=async(e,t,r)=>{const[n,...s]=t.split(\\\".\\\");let o,a=e.globals.get(n);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,r)}catch(t){Te.get(e).stderr(t)}};var st={type:\\\"micropython\\\",module:(e=\\\"1.20.0-297\\\")=>`https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${e}/micropython.mjs`,async engine({loadMicroPython:e},t,r){const{stderr:n,stdout:s,get:o}=_e();r=r.replace(/\\\\.m?js$/,\\\".wasm\\\");const a=await o(e({stderr:n,stdout:s,url:r}));return t.files&&await He(this,a,t.files),t.fetch&&await Ce(this,a,t.fetch),a},registerJSModule:et,run:tt,runAsync:rt,runEvent:nt,transform:(e,t)=>t,writeFile:({FS:e,_module:{PATH:t,PATH_FS:r}},n,s)=>Oe({FS:e,PATH:t,PATH_FS:r},n,s)};const ot={dict_converter:Object.fromEntries};var at={type:\\\"pyodide\\\",module:(e=\\\"0.24.1\\\")=>`https://cdn.jsdelivr.net/pyodide/v${e}/full/pyodide.mjs`,async engine({loadPyodide:e},t,r){const{stderr:n,stdout:s,get:o}=_e(),a=r.slice(0,r.lastIndexOf(\\\"/\\\")),i=await o(e({stderr:n,stdout:s,indexURL:a}));if(t.files&&await He(this,i,t.files),t.fetch&&await Ce(this,i,t.fetch),t.packages){await i.loadPackage(\\\"micropip\\\");const e=await i.pyimport(\\\"micropip\\\");await e.install(t.packages),e.destroy()}return i},registerJSModule:et,run:tt,runAsync:rt,runEvent:nt,transform:(e,t)=>t instanceof e.ffi.PyProxy?t.toJs(ot):t,writeFile:({FS:e,PATH:t,_module:{PATH_FS:r}},n,s)=>Oe({FS:e,PATH:t,PATH_FS:r},n,s)};const it=\\\"ruby-wasm-wasi\\\",ct=it.replace(/\\\\W+/g,\\\"_\\\");var lt={type:it,experimental:!0,module:(e=\\\"2.1.0\\\")=>`https://cdn.jsdelivr.net/npm/ruby-3_2-wasm-wasi@${e}/dist/browser.esm.js`,async engine({DefaultRubyVM:e},t,r){const n=await fetch(`${r.slice(0,r.lastIndexOf(\\\"/\\\"))}/ruby.wasm`),s=await WebAssembly.compile(await n.arrayBuffer()),{vm:o}=await e(s);return t.files&&await He(this,o,t.files),t.fetch&&await Ce(this,o,t.fetch),o},registerJSModule(e,t,r){const n=`__module_${ct}_${t}`;globalThis[n]=r,this.run(e,`require \\\"js\\\";$${t}=JS.global[:${n}]`),delete globalThis[n]},run:(e,t,...r)=>e.eval(je(t),...r),runAsync:(e,t,...r)=>e.evalAsync(je(t),...r),async runEvent(e,t,r){if(/^xworker\\\\.(on\\\\w+)$/.test(t)){const{$1:t}=RegExp,n=`__module_${ct}_event`;globalThis[n]=r,this.run(e,`require \\\"js\\\";$xworker.call(\\\"${t}\\\",JS.global[:${n}])`),delete globalThis[n]}else{const n=this.run(e,`method(:${t})`);await n.call(t,e.wrap(r))}},transform:(e,t)=>t,writeFile:()=>{throw new Error(`writeFile is not supported in ${it}`)}};var ut={type:\\\"wasmoon\\\",module:(e=\\\"1.15.0\\\")=>`https://cdn.jsdelivr.net/npm/wasmoon@${e}/+esm`,async engine({LuaFactory:e,LuaLibraries:t},r){const{stderr:n,stdout:s,get:o}=_e(),a=await o((new e).createEngine());return a.global.getTable(t.Base,(e=>{a.global.setField(e,\\\"print\\\",s),a.global.setField(e,\\\"printErr\\\",n)})),r.files&&await He(this,a,r.files),r.fetch&&await Ce(this,a,r.fetch),a},registerJSModule:(e,t,r)=>{e.global.set(t,r)},run:(e,t,...r)=>{try{return e.doStringSync(je(t),...r)}catch(t){Te.get(e).stderr(t)}},runAsync:async(e,t,...r)=>{try{return await e.doString(je(t),...r)}catch(t){Te.get(e).stderr(t)}},runEvent:async(e,t,r)=>{const[n,...s]=t.split(\\\".\\\");let o,a=e.global.get(n);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,r)}catch(t){Te.get(e).stderr(t)}},transform:(e,t)=>t,writeFile:({cmodule:{module:{FS:e}}},t,r)=>((e,t,r)=>(Fe(e,We(t)),t=Re(e,t),e.writeFile(t,new Uint8Array(r),{canOwn:!0})))(e,t,r)};const ft=new Map,pt=new Map,dt=new Proxy(new Map,{get(e,t){if(!e.has(t)){const[r,...n]=t.split(\\\"@\\\"),s=ft.get(r),o=/^(?:\\\\.?\\\\.?\\\\/|https?:\\\\/\\\\/)/i.test(n)?n.join(\\\"@\\\"):s.module(...n);e.set(t,{url:o,module:import(o),engine:s.engine.bind(s)})}const{url:r,module:n,engine:s}=e.get(t);return(e,o)=>n.then((n=>{pt.set(t,e);for(const t of[\\\"files\\\",\\\"fetch\\\"]){const r=e?.[t];r&&Ie.set(r,o)}return s(n,e,r)}))}}),yt=e=>{for(const t of[].concat(e.type))ft.set(t,e)};for(const e of[st,at,lt,ut])yt(e);const ht=async e=>(await import(\\\"https://cdn.jsdelivr.net/npm/basic-toml@0.3.1/es.js\\\")).parse(e),gt=(e,t,r={})=>{if(t){const[e,n]=(e=>{let t=typeof e;return\\\"string\\\"===t&&/\\\\.(json|toml|txt)$/.test(e)?t=RegExp.$1:e=\\\"./config.txt\\\",[Qe(e),t]})(t);if(\\\"json\\\"===n)r=fetch(e).then(ke);else if(\\\"toml\\\"===n)r=fetch(e).then(xe).then(ht);else if(\\\"string\\\"===n)try{r=JSON.parse(t)}catch(e){r=ht(t)}else\\\"object\\\"===n&&t&&(r=t);t=e}return Ve(r).then((r=>dt[e](r,t)))},wt=\\\"BeforeRun\\\",mt=\\\"AfterRun\\\",bt=[`code${wt}`,`code${wt}Async`,`code${mt}`,`code${mt}Async`],vt=[\\\"onWorker\\\",\\\"onReady\\\",`on${wt}`,`on${wt}Async`,`on${mt}`,`on${mt}Async`],$t=(e,t,r,n,s,o)=>{if(s||o){const a=n?\\\"runAsync\\\":\\\"run\\\",i=e[a];e[a]=n?async function(e,n,...a){s&&await s.call(this,t,r);const c=await i.call(this,e,n,...a);return o&&await o.call(this,t,r),c}:function(e,n,...a){s&&s.call(this,t,r);const c=i.call(this,e,n,...a);return o&&o.call(this,t,r),c}}};try{new SharedArrayBuffer(4)}catch(e){throw new Error([\\\"Unable to use SharedArrayBuffer due insecure environment.\\\",\\\"Please read requirements in MDN: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer#security_requirements\\\"].join(\\\"\\\\n\\\"))}let St,Et,At;const Pt=(e,t)=>{addEventListener(e,t||(async t=>{try{await St,Et(`xworker.on${e}`,t)}catch(e){postMessage(e)}}),!!t&&{once:!0})},{parse:jt,stringify:Mt}=f,{proxy:kt,window:xt,isWindowProxy:Tt}=Ae(self,{parse:jt,stringify:Mt,transform:e=>At?At(e):e}),_t={sync:kt,window:xt,isWindowProxy:Tt,onmessage:console.info,onerror:console.error,onmessageerror:console.warn,postMessage:postMessage.bind(self)};Pt(\\\"message\\\",(({data:{options:e,config:t,code:r,hooks:n}})=>{St=(async()=>{try{const{id:s,tag:o,type:a,custom:i,version:c,config:l,async:u}=e,f=await gt(((e,t=\\\"\\\")=>`${e}@${t}`.replace(/@$/,\\\"\\\"))(a,c),t,l),p=ze(ft.get(a)),d=((e,t,r,n)=>({type:t,config:r,interpreter:n,io:Te.get(n),run:(t,...r)=>e.run(n,t,...r),runAsync:(t,...r)=>e.runAsync(n,t,...r),runEvent:(...t)=>e.runEvent(n,...t)}))(p,i||a,l,f);let y=\\\"run\\\";if(u&&(y+=\\\"Async\\\"),n){const e=((e,t)=>(r,n)=>{const s=e[t].bind(e);e[t]=(e,t,...o)=>s(e,`${n?r:t}\\\\n${n?t:r}`,...o)})(p,y);let t,r,s=\\\"\\\",o=\\\"\\\";for(const e of bt){const t=n[e];if(t){const r=e.endsWith(\\\"Async\\\");(r&&u||!r&&!u)&&(e.startsWith(\\\"codeBefore\\\")?s=t:o=t)}}o&&e(o,!1),s&&e(s,!0);for(const e of vt.slice(2)){const s=n[e];if(s){const n=e.endsWith(\\\"Async\\\");if(n&&u||!n&&!u){const n=Ze(s);e.startsWith(\\\"onBefore\\\")?t=n:r=n}}}$t(p,d,_t,u,t,r)}const{CustomEvent:h,document:g}=xt,w=s&&g.getElementById(s)||null,m=e=>Xe(w,i||a,e,!0,h);let b=\\\"\\\";return p.registerJSModule(f,\\\"polyscript\\\",{xworker:_t,get target(){return!b&&w&&(\\\"SCRIPT\\\"===o?w.after(Ue(g.createElement(`script-${i||a}`),{id:b=`${s}-target`})):(b=s,w.replaceChildren(),w.style.display=\\\"block\\\")),b}}),Et=p.runEvent.bind(p,f),At=p.transform.bind(p,f),w&&m(\\\"ready\\\"),n?.onReady&&Ze(n?.onReady).call(p,d,_t),await p[y](f,r),w&&m(\\\"done\\\"),f}catch(e){postMessage(e)}})(),Pt(\\\"error\\\"),Pt(\\\"message\\\"),Pt(\\\"messageerror\\\")}));\\n\"],{type:'application/javascript'})),{type:'module'});","export const INVALID_CONTENT = 'Invalid content';\nexport const INVALID_SRC_ATTR = 'Invalid worker attribute';\nexport const INVALID_WORKER_ATTR = 'Invalid worker attribute';\n","import { INVALID_CONTENT, INVALID_SRC_ATTR, INVALID_WORKER_ATTR } from '../errors.js';\n\nimport { dedent, unescape } from '../utils.js';\n\nconst hasCommentsOnly = text => !text\n    .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '')\n    .replace(/^\\s*(?:\\/\\/|#).*/gm, '')\n    .trim()\n;\n\n/* c8 ignore start */ // tested via integration\nexport default element => {\n  const { src, worker } = element.attributes;\n  if (worker) {\n      let { value } = worker;\n      // throw on worker values as ambiguous\n      // @see https://github.com/pyscript/polyscript/issues/43\n      if (value) throw new SyntaxError(INVALID_WORKER_ATTR);\n      value = src?.value;\n      if (!value) {\n          // throw on empty src attributes\n          if (src) throw new SyntaxError(INVALID_SRC_ATTR);\n          if (!element.childElementCount)\n              value = element.textContent;\n          else {\n              const { innerHTML, localName, type } = element;\n              const name = type || localName.replace(/-script$/, '');\n              value = unescape(innerHTML);\n              console.warn(\n                  `Deprecated: use <script type=\"${name}\"> for an always safe content parsing:\\n`,\n                  value,\n              );\n          }\n\n          const url = URL.createObjectURL(new Blob([dedent(value)], { type: 'text/plain' }));\n          // TODO: should we really clean up this? debugging non-existent resources\n          //       at distance might be very problematic if the url is revoked.\n          // setTimeout(URL.revokeObjectURL, 5000, url);\n          return url;\n      }\n      return value;\n  }\n  // validate ambiguous cases with src and not empty/commented content\n  if (src && !hasCommentsOnly(element.textContent))\n    throw new SyntaxError(INVALID_CONTENT);\n};\n/* c8 ignore stop */\n","import { $ } from 'basic-devtools';\n\nimport $xworker from './worker/class.js';\nimport workerURL from './worker/url.js';\nimport { getRuntime, getRuntimeID } from './loader.js';\nimport { registry } from './interpreters.js';\nimport { all, dispatch, resolve, defineProperty, nodeInfo } from './utils.js';\nimport { getText } from './fetch-utils.js';\n\nconst getRoot = (script) => {\n    let parent = script;\n    while (parent.parentNode) parent = parent.parentNode;\n    return parent;\n};\n\nexport const queryTarget = (script, idOrSelector) => {\n    const root = getRoot(script);\n    return root.getElementById(idOrSelector) || $(idOrSelector, root);\n};\n\nconst targets = new WeakMap();\nconst targetDescriptor = {\n    get() {\n        let target = targets.get(this);\n        if (!target) {\n            target = document.createElement(`${this.type}-script`);\n            targets.set(this, target);\n            handle(this);\n        }\n        return target;\n    },\n    set(target) {\n        if (typeof target === 'string')\n            targets.set(this, queryTarget(this, target));\n        else {\n            targets.set(this, target);\n            handle(this);\n        }\n    },\n};\n\nconst handled = new WeakMap();\n\nexport const interpreters = new Map();\n\nconst execute = async (script, source, XWorker, isAsync) => {\n    const { type } = script;\n    const module = registry.get(type);\n    /* c8 ignore start */\n    if (module.experimental)\n        console.warn(`The ${type} interpreter is experimental`);\n    const [interpreter, content] = await all([\n        handled.get(script).interpreter,\n        source,\n    ]);\n    try {\n        // temporarily override inherited document.currentScript in a non writable way\n        // but it deletes it right after to preserve native behavior (as it's sync: no trouble)\n        defineProperty(document, 'currentScript', {\n            configurable: true,\n            get: () => script,\n        });\n        module.registerJSModule(interpreter, 'polyscript', { XWorker });\n        dispatch(script, type, 'ready');\n        const result = module[isAsync ? 'runAsync' : 'run'](interpreter, content);\n        const done = dispatch.bind(null, script, type, 'done');\n        if (isAsync) result.then(done);\n        else done();\n        return result;\n    } finally {\n        delete document.currentScript;\n    }\n    /* c8 ignore stop */\n};\n\nconst getValue = (ref, prefix) => {\n    const value = ref?.value;\n    return value ? prefix + value : '';\n};\n\nexport const getDetails = (type, id, name, version, config, runtime = type) => {\n    if (!interpreters.has(id)) {\n        const details = {\n            interpreter: getRuntime(name, config),\n            queue: resolve(),\n            XWorker: $xworker(type, version),\n        };\n        interpreters.set(id, details);\n        // enable sane defaults when single interpreter *of kind* is used in the page\n        // this allows `xxx-*` attributes to refer to such interpreter without `env` around\n        /* c8 ignore start *//* this is tested very well in PyScript */\n        if (!interpreters.has(type)) interpreters.set(type, details);\n        if (!interpreters.has(runtime)) interpreters.set(runtime, details);\n        /* c8 ignore stopt */\n    }\n    return interpreters.get(id);\n};\n\n/**\n * @param {HTMLScriptElement} script a special type of <script>\n */\nexport const handle = async (script) => {\n    // known node, move its companion target after\n    // vDOM or other use cases where the script is a tracked element\n    if (handled.has(script)) {\n        const { target } = script;\n        if (target) {\n            // if the script is in the head just append target to the body\n            if (script.closest('head')) document.body.append(target);\n            // in any other case preserve the script position\n            else script.after(target);\n        }\n    }\n    // new script to handle ... allow newly created scripts to work\n    // just exactly like any other script would\n    else {\n        // allow a shared config among scripts, beside interpreter,\n        // and/or source code with different config or interpreter\n        const {\n            attributes: { async: isAsync, config, env, target, version },\n            src,\n            type,\n        } = script;\n\n        const versionValue = version?.value;\n        const name = getRuntimeID(type, versionValue);\n        let configValue = getValue(config, '|');\n        const id = getValue(env, '') || `${name}${configValue}`;\n        configValue = configValue.slice(1);\n\n        /* c8 ignore start */\n        const url = workerURL(script);\n        if (url) {\n            const XWorker = $xworker(type, versionValue);\n            const xworker = new XWorker(url, {\n                ...nodeInfo(script, type),\n                async: !!isAsync,\n                config: configValue\n            });\n            handled.set(\n                defineProperty(script, 'xworker', { value: xworker }),\n                { xworker }\n            );\n            return;\n        }\n        /* c8 ignore stop */\n\n        const targetValue = getValue(target, '');\n        const details = getDetails(type, id, name, versionValue, configValue);\n\n        handled.set(\n            defineProperty(script, 'target', targetDescriptor),\n            details,\n        );\n\n        if (targetValue) targets.set(script, queryTarget(script, targetValue));\n\n        // start fetching external resources ASAP\n        const source = src ? fetch(src).then(getText) : script.textContent;\n        details.queue = details.queue.then(() =>\n            execute(script, source, details.XWorker, !!isAsync),\n        );\n    }\n};\n","import { $x } from 'basic-devtools';\n\nimport { interpreters } from './script-handler.js';\nimport { all, create } from './utils.js';\nimport { registry, prefixes } from './interpreters.js';\n\nexport const env = new Proxy(create(null), {\n    get: (_, name) => new Promise(queueMicrotask).then(\n        () => awaitInterpreter(name)\n    ),\n});\n\n/* c8 ignore start */ // attributes are tested via integration / e2e\n// ensure both interpreter and its queue are awaited then returns the interpreter\nconst awaitInterpreter = async (key) => {\n    if (interpreters.has(key)) {\n        const { interpreter, queue } = interpreters.get(key);\n        return (await all([interpreter, queue]))[0];\n    }\n\n    const available = interpreters.size\n        ? `Available interpreters are: ${[...interpreters.keys()]\n              .map((r) => `\"${r}\"`)\n              .join(', ')}.`\n        : 'There are no interpreters in this page.';\n\n    throw new Error(`The interpreter \"${key}\" was not found. ${available}`);\n};\n\nexport const listener = async (event) => {\n    const { type, currentTarget } = event;\n    if (!prefixes.length) return;\n    for (let { name, value, ownerElement: el } of $x(\n        `./@*[${prefixes.map((p) => `name()=\"${p}${type}\"`).join(' or ')}]`,\n        currentTarget,\n    )) {\n        name = name.slice(0, -(type.length + 1));\n        const interpreter = await awaitInterpreter(\n            el.getAttribute(`${name}-env`) || name,\n        );\n        const handler = registry.get(name);\n        handler.runEvent(interpreter, value, event);\n    }\n};\n\n/**\n * Look for known prefixes and add related listeners.\n * @param {Document | Element} root\n */\nexport const addAllListeners = (root) => {\n    if (!prefixes.length) return;\n    for (let { name, ownerElement: el } of $x(\n        `.//@*[${prefixes\n            .map((p) => `starts-with(name(),\"${p}\")`)\n            .join(' or ')}]`,\n        root,\n    )) {\n        const i = name.lastIndexOf('-');\n        const type = name.slice(i + 1);\n        if (type !== 'env') {\n            el.addEventListener(type, listener);\n            // automatically disable form controls that are not disabled already\n            if ('disabled' in el && !el.disabled) {\n                el.disabled = true;\n                // set these to enable once the interpreter is known (registered + loaded)\n                env[name.slice(0, i)].then(() => {\n                    el.disabled = false;\n                });\n            }\n        }\n    }\n};\n/* c8 ignore stop */\n","import xworker from './worker/class.js';\nimport Hook from './worker/hook.js';\n\nconst XWorker = xworker();\n\nexport { Hook, XWorker };\n","import '@ungap/with-resolvers';\nimport { $$ } from 'basic-devtools';\n\nimport { assign, create, createOverload, createResolved, dedent, defineProperty, nodeInfo } from './utils.js';\nimport { getDetails } from './script-handler.js';\nimport { registry as defaultRegistry, prefixes, configs } from './interpreters.js';\nimport { getRuntimeID } from './loader.js';\nimport { addAllListeners } from './listeners.js';\nimport { Hook, XWorker } from './xworker.js';\nimport { polluteJS, js as jsHooks, code as codeHooks } from './hooks.js';\nimport workerURL from './worker/url.js';\n\nexport const CUSTOM_SELECTORS = [];\n\n/**\n * @typedef {Object} Runtime custom configuration\n * @prop {object} interpreter the bootstrapped interpreter\n * @prop {(url:string, options?: object) => Worker} XWorker an XWorker constructor that defaults to same interpreter on the Worker.\n * @prop {object} config a cloned config used to bootstrap the interpreter\n * @prop {(code:string) => any} run an utility to run code within the interpreter\n * @prop {(code:string) => Promise<any>} runAsync an utility to run code asynchronously within the interpreter\n * @prop {(path:string, data:ArrayBuffer) => void} writeFile an utility to write a file in the virtual FS, if available\n */\n\nconst types = new Map();\nconst waitList = new Map();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n/**\n * @param {Element} node any DOM element registered via define.\n */\nexport const handleCustomType = (node) => {\n    for (const selector of CUSTOM_SELECTORS) {\n        if (node.matches(selector)) {\n            const type = types.get(selector);\n            const details = registry.get(type);\n            const { resolve } = waitList.get(type);\n            const { options, known } = details;\n            if (!known.has(node)) {\n                known.add(node);\n                const {\n                    interpreter: runtime,\n                    config,\n                    version,\n                    env,\n                    onerror,\n                    hooks,\n                } = options;\n\n                let error;\n                try {\n                    const worker = workerURL(node);\n                    if (worker) {\n                        const xworker = XWorker.call(new Hook(null, hooks), worker, {\n                            ...nodeInfo(node, type),\n                            version,\n                            type: runtime,\n                            custom: type,\n                            config: node.getAttribute('config') || config || {},\n                            async: node.hasAttribute('async')\n                        });\n                        defineProperty(node, 'xworker', { value: xworker });\n                        resolve({ type, xworker });\n                        return;\n                    }\n                }\n                // let the custom type handle errors via its `io`\n                catch (workerError) {\n                    error = workerError;\n                }\n\n                const name = getRuntimeID(runtime, version);\n                const id = env || `${name}${config ? `|${config}` : ''}`;\n                const { interpreter: engine, XWorker: Worker } = getDetails(\n                    type,\n                    id,\n                    name,\n                    version,\n                    config,\n                    runtime\n                );\n                engine.then((interpreter) => {\n                    const module = create(defaultRegistry.get(runtime));\n\n                    const hook = new Hook(interpreter, hooks);\n\n                    const XWorker = function XWorker(...args) {\n                        return Worker.apply(hook, args);\n                    };\n\n                    const resolved = {\n                        ...createResolved(\n                            module,\n                            type,\n                            structuredClone(configs.get(name)),\n                            interpreter,\n                        ),\n                        XWorker,\n                    };\n\n                    module.registerJSModule(interpreter, 'polyscript', { XWorker });\n\n                    // patch methods accordingly to hooks (and only if needed)\n                    for (const suffix of ['Run', 'RunAsync']) {\n                        const overload = createOverload(module, `r${suffix.slice(1)}`);\n\n                        let before = '';\n                        let after = '';\n\n                        for (const key of codeHooks) {\n                            const value = hooks?.main?.[key];\n                            if (value && key.endsWith(suffix)) {\n                                if (key.startsWith('codeBefore'))\n                                    before = dedent(value());\n                                else\n                                    after = dedent(value());\n                            }\n                        }\n\n                        // append code that should be executed *after* first\n                        if (after) overload(after, false);\n\n                        // prepend code that should be executed *before* (so that after is post-patched)\n                        if (before) overload(before, true);\n\n                        let beforeCB, afterCB;\n                        // ignore onReady and onWorker\n                        for (let i = 2; i < jsHooks.length; i++) {\n                            const key = jsHooks[i];\n                            const value = hooks?.main?.[key];\n                            if (value && key.endsWith(suffix)) {\n                                if (key.startsWith('onBefore'))\n                                    beforeCB = value;\n                                else\n                                    afterCB = value;\n                            }\n                        }\n                        polluteJS(module, resolved, node, suffix.endsWith('Async'), beforeCB, afterCB);\n                    }\n\n                    details.queue = details.queue.then(() => {\n                        resolve(resolved);\n                        if (error) onerror?.(error, node);\n                        return hooks?.main?.onReady?.(resolved, node);\n                    });\n                });\n            }\n        }\n    }\n};\n\n/**\n * @type {Map<string, {options:object, known:WeakSet<Element>}>}\n */\nconst registry = new Map();\n\n/**\n * @typedef {Object} CustomOptions custom configuration\n * @prop {'pyodide' | 'micropython' | 'wasmoon' | 'ruby-wasm-wasi'} interpreter the interpreter to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string} [config] the optional config to use within such interpreter\n */\n\nlet dontBotherCount = 0;\n\n/**\n * Allows custom types and components on the page to receive interpreters to execute any code\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @param {CustomOptions} options the custom type configuration\n */\nexport const define = (type, options) => {\n    // allow no-type to be bootstrapped out of the box\n    let dontBother = type == null;\n\n    if (dontBother)\n        type = `_ps${dontBotherCount++}`;\n    else if (defaultRegistry.has(type) || registry.has(type))\n        throw new Error(`<script type=\"${type}\"> already registered`);\n\n    if (!defaultRegistry.has(options?.interpreter))\n        throw new Error('Unspecified interpreter');\n\n    // allows reaching out the interpreter helpers on events\n    defaultRegistry.set(type, defaultRegistry.get(options.interpreter));\n\n    // allows selector -> registry by type\n    const selectors = [`script[type=\"${type}\"]`];\n\n    // ensure a Promise can resolve once a custom type has been bootstrapped\n    whenDefined(type);\n\n    if (dontBother) {\n        // add a script then cleanup everything once that's ready\n        const { hooks } = options;\n        const onReady = hooks?.main?.onReady;\n        options = {\n            ...options,\n            hooks: {\n                ...hooks,\n                main: {\n                    ...hooks?.main,\n                    onReady(resolved, node) {\n                        CUSTOM_SELECTORS.splice(CUSTOM_SELECTORS.indexOf(type), 1);\n                        defaultRegistry.delete(type);\n                        registry.delete(type);\n                        waitList.delete(type);\n                        node.remove();\n                        onReady?.(resolved);\n                    }\n                }\n            },\n        };\n        document.head.append(\n            assign(document.createElement('script'), { type })\n        );\n    }\n    else {\n        selectors.push(`${type}-script`);\n        prefixes.push(`${type}-`);\n    }\n\n    for (const selector of selectors) types.set(selector, type);\n    CUSTOM_SELECTORS.push(...selectors);\n\n    // ensure always same env for this custom type\n    registry.set(type, {\n        options: assign({ env: type }, options),\n        known: new WeakSet(),\n        queue: Promise.resolve(),\n    });\n\n    if (!dontBother) addAllListeners(document);\n    $$(selectors.join(',')).forEach(handleCustomType);\n};\n\n/**\n * Resolves whenever a defined custom type is bootstrapped on the page\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @returns {Promise<object>}\n */\nexport const whenDefined = (type) => {\n    if (!waitList.has(type)) waitList.set(type, Promise.withResolvers());\n    return waitList.get(type).promise;\n};\n/* c8 ignore stop */\n","import stickyModule from 'sticky-module';\nimport { $$ } from 'basic-devtools';\n\nimport { handle } from './script-handler.js';\nimport { assign } from './utils.js';\nimport { selectors, prefixes } from './interpreters.js';\nimport { CUSTOM_SELECTORS, handleCustomType } from './custom.js';\nimport { listener, addAllListeners } from './listeners.js';\n\nimport { define as $define, whenDefined as $whenDefined } from './custom.js';\nimport { env as $env } from './listeners.js';\nimport { Hook as $Hook, XWorker as $XWorker } from './xworker.js';\n\n// avoid multiple initialization of the same library\nconst [\n    {\n        define,\n        whenDefined,\n        env,\n        Hook,\n        XWorker\n    },\n    alreadyLive\n] = stickyModule(\n    'polyscript',\n    {\n        define: $define,\n        whenDefined: $whenDefined,\n        env: $env,\n        Hook: $Hook,\n        XWorker: $XWorker\n    }\n);\n\nexport { define, whenDefined, env, Hook, XWorker };\nexport * from './errors.js';\n\nif (!alreadyLive) {\n    const mo = new MutationObserver((records) => {\n        const selector = selectors.join(',');\n        for (const { type, target, attributeName, addedNodes } of records) {\n            // attributes are tested via integration / e2e\n            /* c8 ignore start */\n            if (type === 'attributes') {\n                const i = attributeName.lastIndexOf('-') + 1;\n                if (i) {\n                    const prefix = attributeName.slice(0, i);\n                    for (const p of prefixes) {\n                        if (prefix === p) {\n                            const type = attributeName.slice(i);\n                            if (type !== 'env') {\n                                const method = target.hasAttribute(attributeName)\n                                    ? 'add'\n                                    : 'remove';\n                                target[`${method}EventListener`](type, listener);\n                            }\n                            break;\n                        }\n                    }\n                }\n                continue;\n            }\n            for (const node of addedNodes) {\n                if (node.nodeType === 1) {\n                    addAllListeners(node);\n                    if (selector && node.matches(selector)) handle(node);\n                    else bootstrap(selector, node, true);\n                }\n            }\n            /* c8 ignore stop */\n        }\n    });\n\n    /* c8 ignore start */\n    const bootstrap = (selector, node, shouldHandle) => {\n        if (selector) $$(selector, node).forEach(handle);\n        selector = CUSTOM_SELECTORS.join(',');\n        if (selector) {\n            if (shouldHandle) handleCustomType(node);\n            $$(selector, node).forEach(handleCustomType);\n        }\n    };\n    /* c8 ignore stop */\n\n    const observe = (root) => {\n        mo.observe(root, { childList: true, subtree: true, attributes: true });\n        return root;\n    };\n\n    const { attachShadow } = Element.prototype;\n    assign(Element.prototype, {\n        attachShadow(init) {\n            return observe(attachShadow.call(this, init));\n        },\n    });\n\n    // give 3rd party a chance to apply changes before this happens\n    queueMicrotask(() => {\n        addAllListeners(observe(document));\n        bootstrap(selectors.join(','), document, false);\n    });\n\n}\n"],"names":["$$","css","root","document","querySelectorAll","$x","path","xpath","XPathEvaluator","createExpression","evaluate","XPathResult","ORDERED_NODE_SNAPSHOT_TYPE","result","i","snapshotLength","push","snapshotItem","env","self","globalThis","deserialize","serialized","$","_","as","out","index","set","unpair","has","get","type","value","arr","object","key","Date","source","flags","RegExp","map","Map","Set","add","name","message","BigInt","Object","deserializer","EMPTY","toString","keys","typeOf","asString","call","slice","includes","shouldSkip","TYPE","serialize","json","lossy","strict","pair","entry","TypeError","valueOf","toJSON","entries","toISOString","serializer","parse","$parse","stringify","$stringify","JSON","options","str","any","CHANNEL","MAIN","THREAD","OBJECT","FUNCTION","NUMBER","STRING","UNDEFINED","SYMBOL","waitAsyncFallback","buffer","Promise","onmessage","w","Worker","postMessage","Int32Array","SharedArrayBuffer","Uint16Array","BYTES_PER_ELEMENT","I32_BYTES","UI16_BYTES","isArray","Array","notify","wait","waitAsync","Atomics","fromCharCode","String","buffers","WeakSet","context","WeakMap","syncResult","then","fn","uid","coincident","transform","interrupt","post","transfer","args","handler","delay","waitFor","isAsync","sb","waitInterrupt","seppuku","Proxy","action","startsWith","id","at","delete","pop","deadlock","setTimeout","console","warn","clearTimeout","length","bytes","uint16","join","actions","callback","Error","size","results","addEventListener","async","event","details","data","stopImmediatePropagation","rest","error","ui16a","charCodeAt","registry","FinalizationRegistry","onGarbageCollected","held","debug","create","hold","return","R","token","target","register","defineProperty","getOwnPropertyDescriptor","getPrototypeOf","isExtensible","ownKeys","preventExtensions","setPrototypeOf","Reflect","assign","TypedArray","Int8Array","augment","descriptor","how","asEntry","symbols","Symbol","filter","s","symbol","o","Bound","this","APPLY","CONSTRUCT","DEFINE_PROPERTY","DELETE_PROPERTY","GET","GET_OWN_PROPERTY_DESCRIPTOR","GET_PROTOTYPE_OF","HAS","IS_EXTENSIBLE","OWN_KEYS","PREVENT_EXTENSION","SET","SET_PROTOTYPE_OF","DELETE","main","patch","eventsHandler","EventTarget","prototype","listener","invoke","concat","handleEvent","currentTarget","method","thread","ids","values","__thread__","global","sid","cb","Event","WeakRef","createGCHook","deref","trapsHandler","thisArg","apply","proto","trap","proxy","toLowerCase","__proxied__","bound","isProxy","localArray","__main__","proxies","argument","bind","proxyHandler","fromEntry","TRAP","ctx","remoteArray","ref","Worker$1","$coincident","util","withResolvers","a","b","c","resolve","reject","promise","getBuffer","response","arrayBuffer","getJSON","getText","text","dedent","string","t","l","arguments","content","line","split","trim","test","replace","$1","codedent","tpl","es","unes","cape","m","defineProperties","all","absoluteURL","base","location","href","URL","nodeInfo","node","tag","tagName","dispatch","what","worker","CE","CustomEvent","dispatchEvent","bubbles","detail","createResolved","module","config","interpreter","io","run","code","runAsync","runEvent","createOverload","pre","stdio","init","localIO","stderr","stdout","log","engine","writeFile","FS","PATH","PATH_FS","absPath","mkdirTree","dirname","Uint8Array","canOwn","tree","current","branch","mkdir","cwd","joinPaths","parts","res","part","p","fetchResolved","config_fetch","url","fetch","fetchPaths","files","to_file","from","undefined","endsWith","flatMap","to_folder","file","filename","lastIndexOf","calculateFetchPaths","fillName","dest","parseTemplate","src","k","SyntaxError","fetchFiles","config_files","targets","sourceDest","calculateFilesPaths","registerJSModule","registerJsModule","runPython","runPythonAsync","globals","micropython","version","loadMicroPython","_module","toJsOptions","dict_converter","fromEntries","pyodide","loadPyodide","indexURL","packages","loadPackage","micropip","pyimport","install","destroy","ffi","PyProxy","toJs","jsType","ruby_wasm_wasi","experimental","DefaultRubyVM","WebAssembly","compile","vm","eval","evalAsync","wrap","wasmoon","LuaFactory","LuaLibraries","createEngine","getTable","Base","setField","doStringSync","doString","cmodule","writeFileShim","configs","selectors","prefixes","import","baseURL","getConfigURLAndType","getRuntime","absolute","getRuntimeID","beforeRun","afterRun","js","polluteJS","resolved","before","after","Hook$1","constructor","hooks","onWorker","jsHooks","codeHooks","xworker","createObjectURL","Blob","isHook","Hook","bootstrap","sync","onerror","writable","configurable","INVALID_CONTENT","INVALID_SRC_ATTR","INVALID_WORKER_ATTR","workerURL","element","attributes","childElementCount","innerHTML","localName","un","textContent","queryTarget","script","idOrSelector","parent","parentNode","getRoot","getElementById","querySelector","targetDescriptor","createElement","handle","handled","interpreters","getValue","prefix","getDetails","runtime","queue","XWorker","$xworker","closest","body","append","versionValue","configValue","targetValue","done","currentScript","execute","queueMicrotask","awaitInterpreter","available","r","ownerElement","el","getAttribute","addAllListeners","disabled","CUSTOM_SELECTORS","types","waitList","handleCustomType","selector","matches","known","custom","hasAttribute","workerError","defaultRegistry","hook","structuredClone","suffix","overload","beforeCB","afterCB","onReady","dontBotherCount","whenDefined","define","alreadyLive","for","stickyModule","dontBother","splice","indexOf","remove","head","forEach","$whenDefined","$env","$Hook","$XWorker","mo","MutationObserver","records","attributeName","addedNodes","nodeType","shouldHandle","observe","childList","subtree","attachShadow","Element"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23]}